<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>centos升级git</title>
    <url>/2020/03/03/Linux/centos%E5%8D%87%E7%BA%A7git/</url>
    <content><![CDATA[<h2 id="centos7编译安装最新版git"><a href="#centos7编译安装最新版git" class="headerlink" title="centos7编译安装最新版git"></a>centos7编译安装最新版git</h2><p><a href="https://learnku.com/articles/30501" target="_blank" rel="noopener">参考链接</a></p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>cygwin安装教程</title>
    <url>/2020/03/03/Linux/cygwin%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="cygwin"><a href="#cygwin" class="headerlink" title="cygwin"></a>cygwin</h2><p>参考链接:</p>
<p><a href="https://www.linuxidc.com/Linux/2019-02/156968.htm" target="_blank" rel="noopener">https://www.linuxidc.com/Linux/2019-02/156968.htm</a></p>
<p><a href="https://www.cnblogs.com/lsdb/p/8075178.html" target="_blank" rel="noopener">https://www.cnblogs.com/lsdb/p/8075178.html</a></p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>remote-ssh的使用过程</title>
    <url>/2020/03/03/Vscode/remote-ssh%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="remote-ssh"><a href="#remote-ssh" class="headerlink" title="remote-ssh"></a>remote-ssh</h2><p>首先在vscode下载remote-ssh相关插件</p>
<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接:"></a>参考链接:</h3><p><a href="https://xirikm.net/2019/619-1" target="_blank" rel="noopener">VSCode 配置 Remote-SSH 远程开发</a></p>
<h3 id="配置SSH密钥登陆"><a href="#配置SSH密钥登陆" class="headerlink" title="配置SSH密钥登陆"></a>配置SSH密钥登陆</h3><p>用户目录下的 <code>.ssh</code> 文件夹内的 id_rsa 和 id_rsa.pub 两个文件,分别对应为私钥和公钥。将 id_rsa.pub 文件中的内容复制到你远程主机用户目录下 .ssh 文件夹内名为 authorized_keys 的文件中即可。</p>
<p>或者将id_rsa.pub复制到.ssh目录下,然后执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat id_rsa.pub &gt;&gt; authorized_keys</span><br></pre></td></tr></table></figure>



<h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><ul>
<li><p>用<code>ssh-keygen</code>生成密钥的时候,如果本地已经存在id_rsa,id_rsa.pub 文件,可以直接使用.</p>
</li>
<li><p>如果服务器不支持密钥登陆,则需要开启.参考链接:<a href="https://hyjk2000.github.io/2012/03/16/how-to-set-up-ssh-keys/" target="_blank" rel="noopener">设置SSH通过密钥登陆</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line"><span class="comment">#修改如下内容</span></span><br><span class="line">RSAAuthentication yes</span><br><span class="line">PubkeyAuthentication yes</span><br></pre></td></tr></table></figure>
</li>
<li><p>完成以上操作后,使用root用户可以正常登陆,但是用普通用户登陆仍然要输入密码</p>
<p><strong>这里的原因是.ssh目录与authorized_keys文件的权限不能太大,像766这种肯定是无法登陆的.</strong></p>
<p><strong>于是我对照root用户下的权限,改成了700,测试发现可以登陆了</strong></p>
</li>
</ul>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>linux新建用户</title>
    <url>/2020/03/03/Linux/linux%E6%96%B0%E5%BB%BA%E7%94%A8%E6%88%B7/</url>
    <content><![CDATA[<blockquote>
<p>起因:</p>
<p>想远程通过remote ssh远程连接服务器,写代码,保存在服务器上运行,而不用本地运行.而通过root用户登陆不太好,所以需要创建一个用户,并设置好权限.</p>
</blockquote>
<p>创建用户前,我们需要了解一下<a href="https://blog.csdn.net/yue7603835/article/details/73699258" target="_blank" rel="noopener">linux的用户和用户组以及权限的概念</a>.</p>
<h2 id="新建用户"><a href="#新建用户" class="headerlink" title="新建用户"></a><a href="https://blog.csdn.net/beitiandijun/article/details/41678251" target="_blank" rel="noopener">新建用户</a></h2><h3 id="adduser命令"><a href="#adduser命令" class="headerlink" title="adduser命令"></a>adduser命令</h3><p>会自动为创建的用户指定主目录、系统shell版本，会在创建时输入用户密码。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adduser apple</span><br></pre></td></tr></table></figure>

<p>这样在创建用户名时，就创建了用户的主目录(/home/apple)以及密码。</p>
<p>默认情况下：</p>
<p>adduser在创建用户时会主动调用  /etc/adduser.conf；</p>
<p>在创建用户主目录时默认在/home下，而且创建为 /home/用户名</p>
<h3 id="useradd命令"><a href="#useradd命令" class="headerlink" title="useradd命令"></a>useradd命令</h3><p>需要使用参数选项指定上述基本设置，如果不使用任何参数，则创建的用户无密码、无主目录、没有指定shell版本。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">useradd tt</span><br></pre></td></tr></table></figure>







<p><a href="https://www.cnblogs.com/52php/p/5677628.html" target="_blank" rel="noopener">参考链接</a></p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>模板引擎初接触--art-template</title>
    <url>/2020/03/03/Javascript/%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E4%B9%8Barttemplate%E5%88%9D%E6%8E%A5%E8%A7%A6/</url>
    <content><![CDATA[<h3 id="art-template官网"><a href="#art-template官网" class="headerlink" title="art-template官网"></a><a href="https://aui.github.io/art-template/zh-cn/" target="_blank" rel="noopener">art-template官网</a></h3>]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>http协议的学习</title>
    <url>/2020/03/01/Http/http%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h2 id="关于HTTP协议"><a href="#关于HTTP协议" class="headerlink" title="关于HTTP协议"></a><a href="https://www.cnblogs.com/ranyonsue/p/5984001.html" target="_blank" rel="noopener">关于HTTP协议</a></h2><h3 id="HTTP简介"><a href="#HTTP简介" class="headerlink" title="HTTP简介"></a>HTTP简介</h3><p>HTTP协议是Hyper Text Transfer Protocol（超文本传输协议）的缩写,是用于从万维网（WWW:World Wide Web ）服务器传输超文本到本地浏览器的传送协议。</p>
<p>HTTP是一个基于TCP/IP通信协议来传递数据（HTML 文件, 图片文件, 查询结果等）。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/2964446-5a35e17f298a48e1.jpg?imageMogr2/auto-orient/strip%7CimageView2/2" alt=""></p>
<h3 id="HTTP-URL"><a href="#HTTP-URL" class="headerlink" title="HTTP-URL"></a>HTTP-URL</h3><p>HTTP使用统一资源标识符（Uniform Resource Identifiers, URI）来传输数据和建立连接。URL是一种特殊类型的URI，包含了用于查找某个资源的足够的信息</p>
<p>URL,全称是UniformResourceLocator, 中文叫统一资源定位符,是互联网上用来标识某一处资源的地址。以下面这个URL为例，介绍下普通URL的各部分组成：</p>
<p><code>http://www.aspxfans.com:8080/news/index.asp?boardID=5&amp;ID=24618&amp;page=1#name</code></p>
<p>从上面的URL可以看出，一个完整的URL包括以下几部分：</p>
<ol>
<li>协议部分：该URL的协议部分为“http：”，这代表网页使用的是HTTP协议。在Internet中可以使用多种协议，如HTTP，FTP等等本例中使用的是HTTP协议。在”HTTP”后面的“//”为分隔符.</li>
<li>域名部分：该URL的域名部分为“<a href="http://www.aspxfans.com”。一个URL中，也可以使用IP地址作为域名使用" target="_blank" rel="noopener">www.aspxfans.com”。一个URL中，也可以使用IP地址作为域名使用</a></li>
<li>端口部分：跟在域名后面的是端口，域名和端口之间使用“:”作为分隔符。端口不是一个URL必须的部分，如果省略端口部分，将采用默认端口.http默认端口80/tcp;https默认端口443/tcp 443/udp.参见<a href="https://blog.csdn.net/u014421556/article/details/51671353" target="_blank" rel="noopener">常见的默认端口</a></li>
<li>虚拟目录部分：从域名后的第一个“/”开始到最后一个“/”为止，是虚拟目录部分。虚拟目录也不是一个URL必须的部分。本例中的虚拟目录是“/news/”</li>
<li>文件名部分：从域名后的最后一个“/”开始到“？”为止，是文件名部分，如果没有“?”,则是从域名后的最后一个“/”开始到“#”为止，是文件部分，如果没有“？”和“#”，那么从域名后的最后一个“/”开始到结束，都是文件名部分。本例中的文件名是“index.asp”。文件名部分也不是一个URL必须的部分，如果省略该部分，则使用默认的文件名</li>
<li>锚部分：从“#”开始到最后，都是锚部分。本例中的锚部分是“name”。锚部分也不是一个URL必须的部分</li>
<li>参数部分：从“？”开始到“#”为止之间的部分为参数部分，又称搜索部分、查询部分。本例中的参数部分为“boardID=5&amp;ID=24618&amp;page=1”。参数可以允许有多个参数，参数与参数之间用“&amp;”作为分隔符。</li>
</ol>
<h3 id="HTTP之请求消息Request"><a href="#HTTP之请求消息Request" class="headerlink" title="HTTP之请求消息Request"></a>HTTP之请求消息Request</h3><p>客户端发送一个HTTP请求到服务器的请求消息包括以下格式:</p>
<ul>
<li>请求行(request line)</li>
<li>请求头部(header)</li>
<li>空行</li>
<li>请求数据</li>
</ul>
]]></content>
      <tags>
        <tag>http</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo为首页添加分类</title>
    <url>/2020/02/29/%E5%8D%9A%E5%AE%A2/hexo%E4%B8%BA%E9%A6%96%E9%A1%B5%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB/</url>
    <content><![CDATA[<p><a href="https://github.com/ahonn/hexo-theme-even/wiki/%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2" target="_blank" rel="noopener"><span style="font-size:1.5em">hexo操作指南</span></a>    <a href="http://yearito.cn/posts/hexo-advanced-settings.html" target="_blank" rel="noopener"><span style="font-size:1.5em">hexo个性化设置</span></a></p>
<h3 id="添加菜单入口"><a href="#添加菜单入口" class="headerlink" title="添加菜单入口"></a>添加菜单入口</h3><p><img src="https://i.loli.net/2020/02/29/OLvdAZQnIblucsf.png" alt=""></p>
<p>就是添加像分类,归档这样的菜单入口</p>
<h4 id="1-首先新建一个自定义页面-以linux页为例"><a href="#1-首先新建一个自定义页面-以linux页为例" class="headerlink" title="1.首先新建一个自定义页面(以linux页为例)"></a>1.首先新建一个自定义页面(以linux页为例)</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page linux</span><br></pre></td></tr></table></figure>

<h4 id="2-编辑生成的-about-index-md-文件，设置布局为-page"><a href="#2-编辑生成的-about-index-md-文件，设置布局为-page" class="headerlink" title="2.编辑生成的 about/index.md 文件，设置布局为 page:"></a>2.编辑生成的 <code>about/index.md</code> 文件，设置布局为 <code>page</code>:</h4><figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">title:</span> linux</span><br><span class="line"><span class="symbol">layout:</span> page</span><br></pre></td></tr></table></figure>

<h4 id="3-修改themes-next-config-yml"><a href="#3-修改themes-next-config-yml" class="headerlink" title="3.修改themes\next_config.yml"></a>3.修改<code>themes\next_config.yml</code></h4><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line">  <span class="attr">menu:</span></span><br><span class="line">    <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line"><span class="string">+</span>   <span class="attr">top:</span> <span class="string">/linux/</span> <span class="string">||</span> <span class="string">signal</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line">    <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br><span class="line">    <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br><span class="line">    <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span></span><br></pre></td></tr></table></figure>

<p>并且在语言包中新增菜单中文<code>themes\next\languages\zh-CN.yml</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line">  <span class="attr">menu:</span></span><br><span class="line">    <span class="attr">home:</span> <span class="string">首页</span></span><br><span class="line">    <span class="attr">archives:</span> <span class="string">归档</span></span><br><span class="line">    <span class="attr">categories:</span> <span class="string">分类</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="string">标签</span></span><br><span class="line">    <span class="attr">about:</span> <span class="string">关于</span></span><br><span class="line"><span class="string">+</span>   <span class="attr">linux:</span> <span class="string">每天一个linux命令</span></span><br></pre></td></tr></table></figure>

<p>这样这个菜单入口就生成了</p>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>lnmp环境搭建</title>
    <url>/2020/02/28/Linux/lnmp%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="lnmp环境-Linux-Apache-MySQL-PHP"><a href="#lnmp环境-Linux-Apache-MySQL-PHP" class="headerlink" title="lnmp环境(Linux+Apache+MySQL+PHP)"></a>lnmp环境(Linux+Apache+MySQL+PHP)</h2><h3 id="nginx安装"><a href="#nginx安装" class="headerlink" title="nginx安装"></a>nginx安装</h3><h4 id="nginx的启动和停止"><a href="#nginx的启动和停止" class="headerlink" title="nginx的启动和停止"></a>nginx的启动和停止</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">start nginx</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux目录介绍及软件安装目录</title>
    <url>/2020/02/28/Linux/linux%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="linux软件安装目录"><a href="#linux软件安装目录" class="headerlink" title="linux软件安装目录"></a>linux软件安装目录</h2><p><a href="https://blog.csdn.net/aqxin/article/details/48324377" target="_blank" rel="noopener">参考链接</a></p>
<p>linux的软件安装目录也是有讲究的.</p>
<p><code>/user</code> : 系统级的目录,可以理解为 <code>C:/Windows/</code>，<code>/usr/lib</code>理解为<code>C:/Windows/System32</code>。</p>
<p><code>/usr/lib</code>：理解为<code>C:/Windows/System32</code>。</p>
<p><code>/usr/local</code>：用户级的程序目录，可以理解为<code>C:/Progrem Files/</code>。用户自己编译的软件默认会安装到这个目录下。</p>
<p><code>/opt</code>：用户级的程序目录，可以理解为<code>D:/Software</code>，opt有可选的意思，这里可以用于放置第三方大型软件（或游戏），当你不需要时，直接<code>rm -rf</code>掉即可。在硬盘容量不够时，也可将/opt单独挂载到其他磁盘上使用。</p>
<p>源码放哪里？<br><code>/usr/src</code>：系统级的源码目录。<br><code>/usr/local/src</code>：用户级的源码目录。</p>
<p><a href="http://www.linuxidc.com/Linux/2015-04/116032.htm" target="_blank" rel="noopener">Linux各个目录的作用及内容</a><br><a href="http://www.linuxidc.com/Linux/2013-01/77368.htm" target="_blank" rel="noopener">Linux 各目录及每个目录的详细介绍</a></p>
<h2 id="linux目录介绍"><a href="#linux目录介绍" class="headerlink" title="linux目录介绍"></a>linux目录介绍</h2><p><code>/etc</code> : 系统管理和配置文件</p>
<p><code>/sbin</code> : 超级管理命令,这里存放的是系统管理员使用的管理程序</p>
<p><code>/usr/bin</code> : 众多的应用程序</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>使用cmder代替cmd</title>
    <url>/2020/02/26/%E6%90%9E%E6%9C%BA%E6%8A%98%E8%85%BE/win10%E4%BD%BF%E7%94%A8cmder%E4%BB%A3%E6%9B%BFcmd/</url>
    <content><![CDATA[<h2 id="cmder安装配置"><a href="#cmder安装配置" class="headerlink" title="cmder安装配置"></a>cmder安装配置</h2><a id="more"></a>

<p><a href="https://www.jeffjade.com/2016/01/13/2016-01-13-windows-software-cmder/" target="_blank" rel="noopener">参考链接</a>    <a href="https://www.jianshu.com/p/bfff2d49f670" target="_blank" rel="noopener">配置参考</a>    <a href="https://cmder.net/" target="_blank" rel="noopener">官网</a></p>
<p>mini版和full版的区别是full版集成了git for Windows,如果电脑已经装了Git,可以使用mini版</p>
<p>安装完成后</p>
<ol>
<li><p>把cmder加到环境变量</p>
<p>可以把<code>Cmder.exe</code>存放的目录添加到系统环境变量；加完之后,<code>Win+r</code>一下输入<code>cmder</code>,即可。</p>
</li>
<li><p>添加cmder到右键菜单</p>
<p>使用管理员权限打开cmd输入以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cmder.exe /REGISTER ALL</span><br></pre></td></tr></table></figure>

</li>
</ol>
]]></content>
      <tags>
        <tag>Terminal</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript深入学习</title>
    <url>/2020/02/24/Javascript/js%E6%B7%B1%E5%85%A5%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="变量对象"><a href="#变量对象" class="headerlink" title="变量对象"></a><a href="https://github.com/mqyqingfeng/Blog/issues/5" target="_blank" rel="noopener">变量对象</a></h2><p>当 JavaScript 代码执行一段可执行代码(executable code)时，会创建对应的执行上下文(execution context)。</p>
<p>对于每个执行上下文，都有三个重要属性：</p>
<ul>
<li>变量对象(Variable object，VO)</li>
<li>作用域链(Scope chain)</li>
<li>this</li>
</ul>
<h2 id="this的用法"><a href="#this的用法" class="headerlink" title="this的用法"></a>this的用法</h2><p>1.纯粹的函数调用</p>
<p>2.作为对象方法的调用</p>
<p>3.作为构造函数调用</p>
<p>4.apply调用</p>
]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript原型及原型链的学习</title>
    <url>/2020/02/22/Javascript/js%E5%8E%9F%E5%9E%8B%E7%9A%84%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="JavaScript原型-prototype"><a href="#JavaScript原型-prototype" class="headerlink" title="JavaScript原型 prototype"></a>JavaScript原型 prototype</h2><p>阮一峰老师的<a href="http://www.ruanyifeng.com/blog/2014/03/undefined-vs-null.html" target="_blank" rel="noopener">《undefined与null的区别》</a>:</p>
<blockquote>
<p>null表示”没有对象”,即此处不应该有值.</p>
<p>undefined表示”缺少值”,即此处应该有一个值,但是还没有定义.</p>
</blockquote>
]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>vim使用学习</title>
    <url>/2020/02/20/Linux/vim%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p><strong>Vim进入和退出命令</strong></p>
<ol>
<li>:w 保存文件但不<strong>退出</strong>vi.</li>
<li>:w file 将修改另外保存到file中，不<strong>退出</strong>vi.</li>
<li>:w! 强制保存，不推出vi.</li>
<li>:wq 保存文件并<strong>退出</strong>vi.</li>
<li>:wq! 强制保存文件，并<strong>退出</strong>vi.</li>
<li>q: 不保存文件，<strong>退出</strong>vi.</li>
<li>:q! 不保存文件，强制<strong>退出</strong>vi.</li>
<li>:e! 放弃所有修改，从上次保存文件开始再编辑</li>
</ol>
<a id="more"></a>

<p><img src="https://i.loli.net/2020/02/29/Lms4So3gw1ixyGW.png" alt=""></p>
<p><img src="https://www.runoob.com/wp-content/uploads/2015/10/vi-vim-cheat-sheet-sch.gif" alt=""></p>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title>网易云折腾</title>
    <url>/2020/02/20/%E6%90%9E%E6%9C%BA%E6%8A%98%E8%85%BE/%E7%BD%91%E6%98%93%E4%BA%91unblock/</url>
    <content><![CDATA[<p><a href="https://github.com/nondanee/UnblockNeteaseMusic" target="_blank" rel="noopener">github地址</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/80608174" target="_blank" rel="noopener">安装脚本地址</a>    <a href="https://desperadoj.com/17.html" target="_blank" rel="noopener">参考链接</a></p>
<p>准备工作,以下方法基于centos7</p>
<blockquote>
<p>1.安装nodejs</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装c/c++编译器</span></span><br><span class="line">yum install -y gcc-c++ make</span><br><span class="line">curl -sL https://rpm.nodesource.com/setup_12.x | sudo -E bash -</span><br><span class="line"><span class="comment">#安装nodejs</span></span><br><span class="line">yum install nodejs -y</span><br><span class="line"><span class="comment">#安装pm2</span></span><br><span class="line">npm install pm2 -g</span><br></pre></td></tr></table></figure>
</blockquote>
<p>期间遇到了一个问题:==yum安装软件竟然报错：rpmdb open failed==</p>
<p><a href="">解决办法</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#首先清除掉缓存，之后再重建就可以了</span></span><br><span class="line">rm -f /var/lib/rpm/__db*</span><br><span class="line">rpm --rebuilddb</span><br></pre></td></tr></table></figure>

<h3 id="正式开始"><a href="#正式开始" class="headerlink" title="正式开始"></a>正式开始</h3><p>下载 UnblockNeteaseMusic</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npx @nondanee/unblockneteasemusic</span><br></pre></td></tr></table></figure>

<p><a href="https://www.ruanyifeng.com/blog/2019/02/npx.html" target="_blank" rel="noopener"><strong>npx使用教程</strong></a></p>
]]></content>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>linux端开放失败的问题</title>
    <url>/2020/02/16/Linux/linux%E7%AB%AF%E5%8F%A3%E5%BC%80%E6%94%BE%E5%A4%B1%E8%B4%A5/</url>
    <content><![CDATA[<h3 id="linux端口常用命令"><a href="#linux端口常用命令" class="headerlink" title="linux端口常用命令"></a>linux端口常用命令</h3><blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=8888/tcp --permanent	<span class="comment">#开启端口</span></span><br><span class="line">firewall-cmd --list-ports	<span class="comment">#查看开放的端口</span></span><br><span class="line">firewall-cmd --query-port=8888/tcp	<span class="comment">#查看端口是否开启</span></span><br><span class="line">lsof -i:8888	<span class="comment">#查看端口占用</span></span><br><span class="line">netstat -tunlp |grep 8888	<span class="comment">#查看指定端口的进程情况</span></span><br></pre></td></tr></table></figure>
</blockquote>
<p>最后是怎么解决的呢…</p>
<p><code>reboot</code>重启下服务器就好了</p>
<p><a href="https://www.jianshu.com/p/cded5a53cb5f" target="_blank" rel="noopener">附宝塔面板端口修改教程</a></p>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>常见问题</tag>
      </tags>
  </entry>
  <entry>
    <title>namp学习</title>
    <url>/2020/02/16/Http/nmap%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h3 id="namp命令"><a href="#namp命令" class="headerlink" title="namp命令"></a>namp命令</h3><p>其基本功能有三个：</p>
<p>（1）是扫描主机端口，嗅探所提供的网络服务</p>
<p>（2）是探测一组主机是否在线</p>
<p>（3）还可以推断主机所用的操作系统，到达主机经过的路由，系统已开放端口的软件版本</p>
<a id="more"></a>

<p><strong>namp命令说明</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nmap</span><br><span class="line">Usage: nmap [Scan Type(s)] [Options] &#123;target specification&#125;</span><br><span class="line">TARGET SPECIFICATION:</span><br><span class="line">  Can pass hostnames, IP addresses, networks, etc.</span><br><span class="line">  Ex: scanme.nmap.org, microsoft.com/24, 192.168.0.1; 10.0.0-255.1-254</span><br><span class="line">  -iL &lt;inputfilename&gt;: Input from list of hosts/networks</span><br><span class="line">  -iR &lt;num hosts&gt;: Choose random targets</span><br><span class="line">  --exclude &lt;host1[,host2][,host3],...&gt;: Exclude hosts/networks</span><br><span class="line">  --excludefile &lt;exclude_file&gt;: Exclude list from file</span><br><span class="line">HOST DISCOVERY:</span><br><span class="line">  -sL: List Scan - simply list targets to scan</span><br><span class="line">  -sn: Ping Scan - <span class="built_in">disable</span> port scan</span><br><span class="line">  -Pn: Treat all hosts as online -- skip host discovery</span><br><span class="line">  -PS/PA/PU/PY[portlist]: TCP SYN/ACK, UDP or SCTP discovery to given ports</span><br><span class="line">  -PE/PP/PM: ICMP <span class="built_in">echo</span>, timestamp, and netmask request discovery probes</span><br><span class="line">  -PO[protocol list]: IP Protocol Ping</span><br><span class="line">  -n/-R: Never <span class="keyword">do</span> DNS resolution/Always resolve [default: sometimes]</span><br><span class="line">  --dns-servers &lt;serv1[,serv2],...&gt;: Specify custom DNS servers</span><br><span class="line">  --system-dns: Use OS<span class="string">'s DNS resolver</span></span><br><span class="line"><span class="string">  --traceroute: Trace hop path to each host</span></span><br><span class="line"><span class="string">SCAN TECHNIQUES:</span></span><br><span class="line"><span class="string">  -sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans</span></span><br><span class="line"><span class="string">  -sU: UDP Scan</span></span><br><span class="line"><span class="string">  -sN/sF/sX: TCP Null, FIN, and Xmas scans</span></span><br><span class="line"><span class="string">  --scanflags &lt;flags&gt;: Customize TCP scan flags</span></span><br><span class="line"><span class="string">  -sI &lt;zombie host[:probeport]&gt;: Idle scan</span></span><br><span class="line"><span class="string">  -sY/sZ: SCTP INIT/COOKIE-ECHO scans</span></span><br><span class="line"><span class="string">  -sO: IP protocol scan</span></span><br><span class="line"><span class="string">  -b &lt;FTP relay host&gt;: FTP bounce scan</span></span><br><span class="line"><span class="string">PORT SPECIFICATION AND SCAN ORDER:</span></span><br><span class="line"><span class="string"># 端口说明和扫描顺序</span></span><br><span class="line"><span class="string">  -p &lt;port ranges&gt;: Only scan specified ports #仅扫描特定端口</span></span><br><span class="line"><span class="string">    Ex: -p22; -p1-65535; -p U:53,111,137,T:21-25,80,139,8080,S:9</span></span><br><span class="line"><span class="string">  --exclude-ports &lt;port ranges&gt;: Exclude the specified ports from scanning</span></span><br><span class="line"><span class="string">  -F: Fast mode - Scan fewer ports than the default scan</span></span><br><span class="line"><span class="string">  -r: Scan ports consecutively - don'</span>t randomize</span><br><span class="line">  --top-ports &lt;number&gt;: Scan &lt;number&gt; most common ports</span><br><span class="line">  --port-ratio &lt;ratio&gt;: Scan ports more common than &lt;ratio&gt;</span><br><span class="line">SERVICE/VERSION DETECTION:</span><br><span class="line">  -sV: Probe open ports to determine service/version info</span><br><span class="line">  --version-intensity &lt;level&gt;: Set from 0 (light) to 9 (try all probes)</span><br><span class="line">  --version-light: Limit to most likely probes (intensity 2)</span><br><span class="line">  --version-all: Try every single probe (intensity 9)</span><br><span class="line">  --version-trace: Show detailed version scan activity (<span class="keyword">for</span> debugging)</span><br><span class="line">SCRIPT SCAN:</span><br><span class="line">  -sC: equivalent to --script=default</span><br><span class="line">  --script=&lt;Lua scripts&gt;: &lt;Lua scripts&gt; is a comma separated list of</span><br><span class="line">           directories, script-files or script-categories</span><br><span class="line">  --script-args=&lt;n1=v1,[n2=v2,...]&gt;: provide arguments to scripts</span><br><span class="line">  --script-args-file=filename: provide NSE script args <span class="keyword">in</span> a file</span><br><span class="line">  --script-trace: Show all data sent and received</span><br><span class="line">  --script-updatedb: Update the script database.</span><br><span class="line">  --script-help=&lt;Lua scripts&gt;: Show <span class="built_in">help</span> about scripts.</span><br><span class="line">           &lt;Lua scripts&gt; is a comma-separated list of script-files or</span><br><span class="line">           script-categories.</span><br><span class="line">OS DETECTION:</span><br><span class="line"><span class="comment">#系统推测</span></span><br><span class="line">  -O: Enable OS detection <span class="comment">#启用操作系统检测</span></span><br><span class="line">  --osscan-limit: Limit OS detection to promising targets</span><br><span class="line">  --osscan-guess: Guess OS more aggressively</span><br><span class="line">TIMING AND PERFORMANCE:</span><br><span class="line">  Options <span class="built_in">which</span> take &lt;time&gt; are <span class="keyword">in</span> seconds, or append <span class="string">'ms'</span> (milliseconds),</span><br><span class="line">  <span class="string">'s'</span> (seconds), <span class="string">'m'</span> (minutes), or <span class="string">'h'</span> (hours) to the value (e.g. 30m).</span><br><span class="line">  -T&lt;0-5&gt;: Set timing template (higher is faster)</span><br><span class="line">  --min-hostgroup/max-hostgroup &lt;size&gt;: Parallel host scan group sizes</span><br><span class="line">  --min-parallelism/max-parallelism &lt;numprobes&gt;: Probe parallelization</span><br><span class="line">  --min-rtt-timeout/max-rtt-timeout/initial-rtt-timeout &lt;time&gt;: Specifies</span><br><span class="line">      probe round trip time.</span><br><span class="line">  --max-retries &lt;tries&gt;: Caps number of port scan probe retransmissions.</span><br><span class="line">  --host-timeout &lt;time&gt;: Give up on target after this long</span><br><span class="line">  --scan-delay/--max-scan-delay &lt;time&gt;: Adjust delay between probes</span><br><span class="line">  --min-rate &lt;number&gt;: Send packets no slower than &lt;number&gt; per second</span><br><span class="line">  --max-rate &lt;number&gt;: Send packets no faster than &lt;number&gt; per second</span><br><span class="line">FIREWALL/IDS EVASION AND SPOOFING:</span><br><span class="line">  -f; --mtu &lt;val&gt;: fragment packets (optionally w/given MTU)</span><br><span class="line">  -D &lt;decoy1,decoy2[,ME],...&gt;: Cloak a scan with decoys</span><br><span class="line">  -S &lt;IP_Address&gt;: Spoof <span class="built_in">source</span> address</span><br><span class="line">  -e &lt;iface&gt;: Use specified interface</span><br><span class="line">  -g/--<span class="built_in">source</span>-port &lt;portnum&gt;: Use given port number</span><br><span class="line">  --proxies &lt;url1,[url2],...&gt;: Relay connections through HTTP/SOCKS4 proxies</span><br><span class="line">  --data &lt;hex string&gt;: Append a custom payload to sent packets</span><br><span class="line">  --data-string &lt;string&gt;: Append a custom ASCII string to sent packets</span><br><span class="line">  --data-length &lt;num&gt;: Append random data to sent packets</span><br><span class="line">  --ip-options &lt;options&gt;: Send packets with specified ip options</span><br><span class="line">  --ttl &lt;val&gt;: Set IP time-to-live field</span><br><span class="line">  --spoof-mac &lt;mac address/prefix/vendor name&gt;: Spoof your MAC address</span><br><span class="line">  --badsum: Send packets with a bogus TCP/UDP/SCTP checksum</span><br><span class="line">OUTPUT:</span><br><span class="line">  -oN/-oX/-oS/-oG &lt;file&gt;: Output scan <span class="keyword">in</span> normal, XML, s|&lt;rIpt kIddi3,</span><br><span class="line">     and Grepable format, respectively, to the given filename.</span><br><span class="line">  -oA &lt;basename&gt;: Output <span class="keyword">in</span> the three major formats at once</span><br><span class="line">  -v: Increase verbosity level (use -vv or more <span class="keyword">for</span> greater effect)</span><br><span class="line">  -d: Increase debugging level (use -dd or more <span class="keyword">for</span> greater effect)</span><br><span class="line">  --reason: Display the reason a port is <span class="keyword">in</span> a particular state</span><br><span class="line">  --open: Only show open (or possibly open) ports</span><br><span class="line">  --packet-trace: Show all packets sent and received</span><br><span class="line">  --iflist: Print host interfaces and routes (<span class="keyword">for</span> debugging)</span><br><span class="line">  --append-output: Append to rather than clobber specified output files</span><br><span class="line">  --resume &lt;filename&gt;: Resume an aborted scan</span><br><span class="line">  --stylesheet &lt;path/URL&gt;: XSL stylesheet to transform XML output to HTML</span><br><span class="line">  --webxml: Reference stylesheet from Nmap.Org <span class="keyword">for</span> more portable XML</span><br><span class="line">  --no-stylesheet: Prevent associating of XSL stylesheet w/XML output</span><br><span class="line">MISC:</span><br><span class="line">  -6: Enable IPv6 scanning</span><br><span class="line">  -A: Enable OS detection, version detection, script scanning, and traceroute</span><br><span class="line">  --datadir &lt;dirname&gt;: Specify custom Nmap data file location</span><br><span class="line">  --send-eth/--send-ip: Send using raw ethernet frames or IP packets</span><br><span class="line">  --privileged: Assume that the user is fully privileged</span><br><span class="line">  --unprivileged: Assume the user lacks raw socket privileges</span><br><span class="line">  -V: Print version number <span class="comment">#输出版本号</span></span><br><span class="line">  -h: Print this <span class="built_in">help</span> summary page.</span><br><span class="line">EXAMPLES:</span><br><span class="line">  nmap -v -A scanme.nmap.org</span><br><span class="line">  nmap -v -sn 192.168.0.0/16 10.0.0.0/8</span><br><span class="line">  nmap -v -iR 10000 -Pn -p 80</span><br><span class="line">SEE THE MAN PAGE (https://nmap.org/book/man.html) FOR MORE OPTIONS AND EXAMPLES</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>http</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>css选择器总结</title>
    <url>/2020/02/15/CSS/css%E9%80%89%E6%8B%A9%E5%99%A8/</url>
    <content><![CDATA[<h2 id="css交集选择器-并集选择器-兄弟选择器"><a href="#css交集选择器-并集选择器-兄弟选择器" class="headerlink" title="css交集选择器,并集选择器,兄弟选择器"></a>css交集选择器,并集选择器,兄弟选择器</h2><p><a href="https://www.w3school.com.cn/cssref/css_selectors.asp" target="_blank" rel="noopener"><span style="font-size:1.25em">参考链接</span>&gt;</a></p>
<h3 id="交集选择器"><a href="#交集选择器" class="headerlink" title="交集选择器"></a>交集选择器</h3><p>交集选择器,相交的部分就是要设置属性值的标签</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-class">.para1</span> &#123;<span class="attribute">color</span>: red&#125;;</span><br></pre></td></tr></table></figure>

<p><strong>含义:类名为para的p标签文字颜色为红色</strong></p>
<h3 id="并集选择器"><a href="#并集选择器" class="headerlink" title="并集选择器"></a>并集选择器</h3><p>并集选择器就是同时操控多个元素,选择器之间用<code>,</code>相隔</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span> &#123;<span class="attribute">color</span>: red&#125;;</span><br><span class="line"><span class="comment">/*等效于*/</span></span><br><span class="line"><span class="selector-tag">h1</span> &#123;<span class="attribute">color</span>:red&#125;;</span><br><span class="line"><span class="selector-tag">h2</span> &#123;<span class="attribute">color</span>:red&#125;;</span><br><span class="line"><span class="selector-tag">h3</span> &#123;<span class="attribute">color</span>:red&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="兄弟选择器"><a href="#兄弟选择器" class="headerlink" title="兄弟选择器"></a>兄弟选择器</h3><p>相邻兄弟选择器（Adjacent sibling selector）可选择紧接在另一元素后的元素，且二者有相同父元素。</p>
<p>例如，如果要增加紧接在 <strong>h1 元素后出现的段落</strong>的上边距，可以这样写：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> + <span class="selector-tag">p</span> &#123;<span class="attribute">margin-top</span>:<span class="number">50px</span>;&#125;</span><br></pre></td></tr></table></figure>

<p><strong>这个选择器读作：“选择紧接在 h1 元素后出现的段落，h1 和 p 元素拥有共同的父元素”。</strong></p>
<p><strong>注意:必须是紧接着的元素!!!</strong></p>
]]></content>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>linux权限问题详解</title>
    <url>/2020/02/12/Linux/linux%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="ls-lh命令查看权限"><a href="#ls-lh命令查看权限" class="headerlink" title="ls -lh命令查看权限"></a>ls -lh命令查看权限</h2><p>首先在linux目录下通过<code>ls -lh</code>命令查看目录下所有文件的权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">total 7.5M</span><br><span class="line">drwxr-xr-x  5 root root 4.0K Aug 27 17:35 backup</span><br><span class="line">drwxrwxrwx  3 root root 4.0K Jan 31 17:13 Recycle_bin</span><br><span class="line">drwxr-xr-x 11 root root 4.0K Aug 29 09:26 server</span><br><span class="line">drwxr-xr-x  3 root root 4.0K Nov 10 18:27 themes</span><br><span class="line">-rw-r--r--  1 root root 7.5M Sep  5 08:57 wordpress-4.6.15.tar.gz</span><br><span class="line">drwxrwxrwx  3 root root 4.0K Jan 31 17:13 wwwlogs</span><br><span class="line">drwxrwxrw-  7 root root 4.0K Jan 31 17:13 wwwroot</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdn.net/20170513152626838?watermark/2/text/aHR0cD" alt=""></p>
<p>其中rwx分别代表着read,write,eXecute</p>
<ul>
<li>r(Read，读取)：对文件而言，具有读取文件内容的权限；对目录来说，具有浏览目录的权限。</li>
<li>w(Write,写入)：对文件而言，具有新增,修改,删除文件内容的权限；对目录来说，具有新建，删除，修改，移动目录内文件的权限。</li>
<li>x(eXecute，执行)：对文件而言，具有执行文件的权限；对目录了来说该用户具有进入目录的权限。</li>
</ul>
<ol>
<li>目录的只读访问不允许使用cd进入目录，必须要有执行的权限才能进入。</li>
<li>只有执行权限只能进入目录，不能看到目录下的内容，要想看到目录下的文件名和目录名，需要可读权限。</li>
<li>一个文件能不能被删除，主要看该文件所在的目录对用户是否具有写权限(<strong>即w权限</strong>)，如果目录对用户没有写权限，则该目录下的所有文件都不能被删除，文件所有者除外</li>
<li>目录的w位不设置，即使你拥有目录中某文件的w权限也不能写该文件</li>
</ol>
<p><img src="https://i.loli.net/2020/02/12/zOotH9qUC12ce5y.png" alt=""></p>
<p>在<code>-rwxr-xr-x 1 www   www   644 Jan 31 17:12 index.html</code>中</p>
<p>index.html文件属于www用户,www组;</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript:void(0)和javascript:;的用法</title>
    <url>/2020/02/11/Javascript/javascriptvoid(0)%E5%92%8Cjavascript;%E7%9A%84%E7%94%A8%E6%B3%95/</url>
    <content><![CDATA[<p><a href="https://www.cnblogs.com/Qian123/p/5345697.html" target="_blank" rel="noopener"><h3>参考链接</h3></a></p>
<h2 id="javascript-void-0"><a href="#javascript-void-0" class="headerlink" title="javascript:void(0)"></a>javascript:void(0)</h2><p>我们经常会使用到 javascript:void(0) 这样的代码，那么在 JavaScript 中 javascript:void(0) 代表的是什么意思呢？</p>
<p>void 是 JavaScript 中非常重要的关键字，该操作符指定要计算一个表达式但是不返回值。</p>
<p>下面的代码创建了一个超级链接，当用户点击以后不会发生任何事。当用户点击链接时，void(0) 计算为 0，但在 JavaScript 上没有任何效果。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;a href=<span class="string">"javascript:void(0)"</span>&gt;单击此处什么也不会发生&lt;<span class="regexp">/a&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;a href=<span class="string">"javascript:void(document.form.submit())"</span>&gt;单此处提交表单&lt;<span class="regexp">/a&gt;</span></span><br></pre></td></tr></table></figure>

<p>其实我们可以这样用<code>&lt;a href=&quot;javascript:void(document.form.submit())&quot;&gt;</code>，这句话会进行一次submit操作。那什么情况下用void(0)比较多呢，无刷新，当然是Ajax了，看一下Ajax的web页面的话，一般都会看到有很多的void(0)，所以在使用void(0)之前,最好先想一想,这个页面是否需要整体刷新。</p>
<h2 id="标签中href-”javascript-”"><a href="#标签中href-”javascript-”" class="headerlink" title="标签中href=”javascript:;”"></a>标签中href=”javascript:;”</h2><p>这里的href=”javascript:;”，其中javascript:是伪协议，它可以让我们通过一个链接来调用javascript函数.而采用这个方式 javascript:;可以实现A标签的点击事件运行时，如果页面内容很多，有滚动条时，页面不会乱跳，用户体验更好。</p>
<p>javascript:是表示在触发&lt;a&gt;默认动作时，执行一段JavaScript代码，而 javascript:; 表示什么都不执行，这样点击&lt;a&gt;时就没有任何反应。</p>
<p>javascript:;表示这是一个空连接。点击之后没任何反应。<br>类似的是#，但是一个#点击之后页面很长的情况下会会滚到顶部；而javascript:;没这样的问题；</p>
<h2 id="href-”-”与href-”javascript-void-0-”的区别"><a href="#href-”-”与href-”javascript-void-0-”的区别" class="headerlink" title="href=”#”与href=”javascript:void(0)”的区别"></a>href=”#”与href=”javascript:void(0)”的区别</h2><p>在做页面时，如果想做一个链接点击后不做任何事情，或者响应点击而完成其他事情，可以设置其属性 href = “#”，但是，这样会有一个问题，就是当页面有滚动条时，点击后会返回到页面顶端，用户体验不好。 </p>
<p>目前有如下几种解决办法： </p>
<ol>
<li>点击链接后不做任何事情 </li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>&lt;a href=<span class="string">"javascript:void(0);"</span> &gt;test&lt;<span class="regexp">/a&gt;   </span></span><br><span class="line"><span class="regexp">2.&lt;a href="javascript:;" &gt;test&lt;/</span>a&gt;   </span><br><span class="line"><span class="number">3.</span>&lt;a href=<span class="string">"####"</span> &gt;test&lt;<span class="regexp">/a&gt; /</span><span class="regexp">/使用2个到4个#，见的大多是"####"，也有使用"#all"等其他的</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>点击链接后，响应用户自定义的点击事件 </li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>&lt;a href=<span class="string">"javascript:void(0)"</span> onclick=<span class="string">"doSomething()"</span>&gt;test&lt;<span class="regexp">/a&gt;   </span></span><br><span class="line"><span class="regexp">2.&lt;a href="#" onclick="doSomething();return false;"&gt;什么问题都解决了,包括浏览器不兼容问题&lt;/</span>a&gt; <span class="comment">//或者直接使用href=""   </span></span><br><span class="line"><span class="number">3.</span>&lt;a href=<span class="string">"#"</span> onclick=<span class="string">"alert();event.returnValue=false;"</span>&gt;test&lt;<span class="regexp">/a&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>js事件委托</title>
    <url>/2020/02/08/Javascript/%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%89%98/</url>
    <content><![CDATA[<h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p>事件委托，通俗地来讲，就是把一个元素响应事件（click、keydown……）的函数委托到另一个元素；</p>
<p>一般来讲，会把一个或者一组元素的事件委托到它的父层或者更外层元素上，真正绑定事件的是外层元素，当事件响应到需要绑定的元素上时，会通过<strong>事件冒泡机制</strong>从而触发它的外层元素的绑定事件上，然后在外层元素上去执行函数。</p>
<p><img src="https://i.loli.net/2020/02/10/Pjci6mMzJOsFV7a.png" alt=""></p>
<p>我们可以在绑定事件的时候指定指是在哪个阶段触发事件，element.addEventListener(event, function, useCapture)，==useCapture默认为false==，即默认在冒泡阶段触发事件</p>
<h3 id="功能实现"><a href="#功能实现" class="headerlink" title="功能实现"></a>功能实现</h3><p>比如有这样一个HTML片段</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>item 1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>item 2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>item 3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  ......</span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>item n<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">// ...... 代表中间还有未知数个 li</span><br></pre></td></tr></table></figure>

<p>通过事件委托把li元素的事件代理委托到它的父级元素也就是ul上:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 给父层元素绑定事件</span></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'list'</span>).addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 兼容性处理</span></span><br><span class="line">  <span class="keyword">var</span> event = e || <span class="built_in">window</span>.event;</span><br><span class="line">  <span class="keyword">var</span> target = event.target || event.srcElement;</span><br><span class="line">  <span class="comment">// 判断是否匹配目标元素</span></span><br><span class="line">  <span class="keyword">if</span> (target.nodeName.toLocaleLowerCase === <span class="string">'li'</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'the content is: '</span>, target.innerHTML);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p><strong><code>Event.srcElement</code></strong> 是标准的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Event/target" target="_blank" rel="noopener"><code>Event.target</code></a> 属性的一个别名。它只对老版本的IE浏览器有效。目的是兼容老版本的IE。</p>
]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>ls命令</title>
    <url>/2020/02/06/Linux/ls%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="Linux-ls命令"><a href="#Linux-ls命令" class="headerlink" title="Linux ls命令"></a>Linux ls命令</h2><p><strong>语法</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls [选项] [目录名]</span><br></pre></td></tr></table></figure>

<p><strong>常用参数</strong></p>
<p>-a, –all 列出目录下的所有文件，包括以 . 开头的隐含文件</p>
<p>-A 同-a，但不列出“.”(表示当前目录)和“..”(表示当前目录的父目录)。</p>
<p>-c 配合 -lt：根据 ctime 排序及显示 ctime (文件状态最后更改的时间)配合 -l：显示 ctime 但根据名称排序否则：根据 ctime 排序</p>
<p>-C 每栏由上至下列出项目</p>
<p>–color[=WHEN] 控制是否使用色彩分辨文件。WHEN 可以是’never’、’always’或’auto’其中之一</p>
<p>-d, –directory 将目录象文件一样显示，而不是显示其下的文件。</p>
<p>-D, –dired 产生适合 Emacs 的 dired 模式使用的结果</p>
<p>-f 对输出的文件不进行排序，-aU 选项生效，-lst 选项失效</p>
<p>-g 类似 -l,但不列出所有者</p>
<p>-G, –no-group 不列出任何有关组的信息</p>
<p>-h, –human-readable 以容易理解的格式列出文件大小 (例如 1K 234M 2G)</p>
<p>–si 类似 -h,但文件大小取 1000 的次方而不是 1024</p>
<p>-H, –dereference-command-line 使用命令列中的符号链接指示的真正目的地</p>
<p>–indicator-style=方式 指定在每个项目名称后加上指示符号&lt;方式&gt;：none (默认)，classify (-F)，file-type (-p)</p>
<p>-i, –inode 印出每个文件的 inode 号</p>
<p>-I, –ignore=样式 不印出任何符合 shell 万用字符&lt;样式&gt;的项目</p>
<p>-k 即 –block-size=1K,以 k 字节的形式表示文件的大小。</p>
<p>-l 除了文件名之外，还将文件的权限、所有者、文件大小等信息详细列出来。</p>
<p>-L, –dereference 当显示符号链接的文件信息时，显示符号链接所指示的对象而并非符号链接本身的信息</p>
<p>-m 所有项目以逗号分隔，并填满整行行宽</p>
<p>-o 类似 -l,显示文件的除组信息外的详细信息。  </p>
<p>-r, –reverse 依相反次序排列</p>
<p>-R, –recursive 同时列出所有子目录层</p>
<h3 id="ls-lh命令"><a href="#ls-lh命令" class="headerlink" title="ls -lh命令"></a>ls -lh命令</h3><p>功能: 查看权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ls -lh</span><br><span class="line">total 600K</span><br><span class="line">drwxr-xr-x 1 qq862 197609    0 1月  18 17:37 node_modules/</span><br><span class="line">-rw-r--r-- 1 qq862 197609  782 1月  18 17:34 package.json</span><br><span class="line">-rw-r--r-- 1 qq862 197609 243K 1月  18 17:37 package-lock.json</span><br><span class="line">drwxr-xr-x 1 qq862 197609    0 2月   3 17:01 public/</span><br><span class="line">drwxr-xr-x 1 qq862 197609    0 11月 10 12:05 scaffolds/</span><br><span class="line">drwxr-xr-x 1 qq862 197609    0 12月 13 20:57 <span class="built_in">source</span>/</span><br><span class="line">drwxr-xr-x 1 qq862 197609    0 11月 26 12:41 themes/</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>通过Cloudflare CDN服务加速和保护自己的网站</title>
    <url>/2020/02/03/%E5%8D%9A%E5%AE%A2/%E9%80%9A%E8%BF%87Cloudflare%20CDN%E5%8A%A0%E9%80%9F%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[<a id="more"></a>

<p><a href="https://mp.weixin.qq.com/s/GZPPGsh5NrAnPfAMqOIrcQ" target="_blank" rel="noopener"><span style="font-size:1.5em">参考链接</span></a></p>
<blockquote>
<p>测试</p>
</blockquote>
<img src="https://i.loli.net/2020/02/03/6z8M5bhF3lxun4H.png" referrerpolicy="no-referrer">]]></content>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>scp命令</title>
    <url>/2020/02/01/Linux/scp%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="Linux-scp命令"><a href="#Linux-scp命令" class="headerlink" title="Linux scp命令"></a>Linux scp命令</h2><p><strong>语法</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ scp</span><br><span class="line">usage: scp [-346BCpqrv] [-c cipher] [-F ssh_config] [-i identity_file]</span><br><span class="line">           [-l <span class="built_in">limit</span>] [-o ssh_option] [-P port] [-S program]</span><br><span class="line">           [[user@]host1:]file1 [...] [[user@]host2:]file2</span><br></pre></td></tr></table></figure>

<h3 id="在Linux中安全传输文件的14个SCP命令示例"><a href="#在Linux中安全传输文件的14个SCP命令示例" class="headerlink" title="在Linux中安全传输文件的14个SCP命令示例"></a><a href="https://www.linuxtechi.com/scp-command-examples-in-linux/" target="_blank" rel="noopener">在Linux中安全传输文件的14个SCP命令示例</a></h3><p>例如:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp -P port local_file remote_username@remote_ip:remote_folder </span><br><span class="line"><span class="comment">#-P port：注意是大写的P, port是指定数据传输用到的端口号</span></span><br></pre></td></tr></table></figure>

<p>实例:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp -P 50000 sga.txt cheng@***.***.**.**:/www/wwwroot/filelist/</span><br></pre></td></tr></table></figure>

<p><a href="https://www.runoob.com/linux/linux-comm-scp.html" target="_blank" rel="noopener"><span style="font-size:1.5rem">runoob教程</span></a></p>
<p>报错提示</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp: /www/wwwroot/filelist//sga.txt: Permission denied</span><br></pre></td></tr></table></figure>

<p>上网查了才知道原来是由于没有该目录的操作权限，默认的是在/tmp有权限</p>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>ftp</tag>
      </tags>
  </entry>
  <entry>
    <title>git bash,cmd等软件设置代理</title>
    <url>/2020/02/01/Git/git%20bash%E7%AD%89%E8%BD%AF%E4%BB%B6%E8%B5%B0%E4%BB%A3%E7%90%86/</url>
    <content><![CDATA[<h2 id="Git-bash-cmd设置临时代理"><a href="#Git-bash-cmd设置临时代理" class="headerlink" title="Git bash,cmd设置临时代理"></a>Git bash,cmd设置临时代理</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">环境：shadowsocks、windows</span><br><span class="line">本地ss端口设置(这里1080)</span><br><span class="line"></span><br><span class="line">cmd命令行:(不用socks5)(临时设置)(也可放置环境变量)</span><br><span class="line"><span class="built_in">set</span> http_proxy=http://127.0.0.1:7890</span><br><span class="line"><span class="built_in">set</span> https_proxy=http://127.0.0.1:7890</span><br><span class="line"></span><br><span class="line">ps:一定要用cmd命令行，千万别用powershell !!!</span><br><span class="line">简易测试命令：curl https://www.google.com（别用ping）</span><br></pre></td></tr></table></figure>

<p> <strong>上面命令的作用是设置环境变量，不用担心，这种环境变量只会持续到cmd窗口关闭，不是系统环境变量。</strong> </p>
<p>以git clone为例:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https方式</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/siwadiya/Photo_Show.git </span><br><span class="line"><span class="comment">#ssh</span></span><br><span class="line">git <span class="built_in">clone</span> git@github.com:siwadiya/Photo_Show.git</span><br></pre></td></tr></table></figure>

<h2 id="HTTPS全局代理"><a href="#HTTPS全局代理" class="headerlink" title="HTTPS全局代理"></a>HTTPS全局代理</h2><p>目前来看，设置代理后加速最明显的是 <code>HTTPS</code>， 为其设置代理的方式如下</p>
<p>打开 <code>git bash</code>，然后输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global http.proxy <span class="string">"http://127.0.0.1:7890"</span></span><br><span class="line">git config --global https.proxy <span class="string">"https://127.0.0.1:7890"</span></span><br></pre></td></tr></table></figure>

<p>这样设置之后，<code>git clone https://github.com/username/repo.git</code> 的速度基本能跑满带宽</p>
<p>但是，这种方式并不适用于 <code>git clone git@github.com:username/repo.git</code> (ssh方式通信)</p>
<h2 id="npm和yarn的源-代理设置"><a href="#npm和yarn的源-代理设置" class="headerlink" title="npm和yarn的源,代理设置"></a><a href="https://www.51noip.cn/2018/02/01/npm-yarn-proxy/" target="_blank" rel="noopener">npm和yarn的源,代理设置</a></h2>]]></content>
      <tags>
        <tag>git</tag>
        <tag>cmd</tag>
      </tags>
  </entry>
  <entry>
    <title>Termux终端模拟器</title>
    <url>/2020/01/31/App/Termux/</url>
    <content><![CDATA[<a id="more"></a>

<p><a href="https://www.sqlsec.com/2018/05/termux.html" target="_blank" rel="noopener">Termux高级终端配置教程</a></p>
<h2 id="使用技巧"><a href="#使用技巧" class="headerlink" title="使用技巧"></a>使用技巧</h2><p>1.可以<code>pwd</code>命令查看当前运行的目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/data/data/com.termux/files/home  <span class="comment">#这是默认目录</span></span><br></pre></td></tr></table></figure>

<p>Termux</p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora主题</title>
    <url>/2020/01/30/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E7%BD%AE/Typora%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<a id="more"></a>

<p>Typora主题配置文件目录为<code>C:\Users\username\AppData\Roaming\Typora\themes</code></p>
<p>针对我个人最喜欢的Github主题进行修改.</p>
<p>1.将<strong><code>块引用</code></strong>的左边框设置为黑色,如下所示:</p>
<blockquote>
<p>这是一段引用</p>
</blockquote>
<p>修改的样式代码:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">blockquote</span> &#123;</span><br><span class="line">    <span class="comment">/* border-left: 4px solid #dfe2e5; */</span></span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">3px</span> solid <span class="built_in">rgba</span>(0, 0, 0, 0.84);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>在修改了块引用之后,因为图片的清晰度问题,我再次修改主题.</p>
<p>是这样的,Typora在插入图片时图片会模糊,这时如果将图片缩放至80%,又会变得很清晰,于是我就想:能不能插入的图片默认设置缩放80%.</p>
</blockquote>
<p>在<a href="http://support.typora.io/Images/#resize-images" target="_blank" rel="noopener">官方文档</a>中发现这样一段话</p>
<blockquote>
<h2 id="对齐图像"><a href="#对齐图像" class="headerlink" title="对齐图像"></a>对齐图像</h2><p>目前，Typora不支持图像对齐。但是您可以使用HTML代码，例如<code>![img](src)</code>在导出的HTML或PDF中对齐图像。</p>
<p>同样，默认情况下，如果一个段落仅包含一个图像，则它将居中对齐。它由CSS控制，可以通过<a href="http://support.typora.io/Add-Custom-CSS/" target="_blank" rel="noopener">添加自定义CSS</a>进行更改：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span> <span class="selector-class">.md-image</span><span class="selector-pseudo">:only-child</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: auto;</span><br><span class="line">    <span class="attribute">text-align</span>: inherit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="调整图像大小"><a href="#调整图像大小" class="headerlink" title="调整图像大小"></a>调整图像大小</h2><p>有关详细信息，请参见此<a href="http://support.typora.io/Resize-Image/" target="_blank" rel="noopener">链接</a>。</p>
</blockquote>
<p>于是我在theme.css文件中添加了如下代码</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span> <span class="selector-class">.md-image</span><span class="selector-pseudo">:only-child</span>&#123;</span><br><span class="line">    <span class="attribute">zoom</span>: <span class="number">80%</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: inherit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>图片的大小就默认缩放至80%了</p>
<p><strong><span style="color:red">注意:这里我用的是zoom属性,如果用width属性,图片还是不够清晰,具体原因以后再探究.</span></strong></p>
<hr>
<p>做完这些以后md文件转成html上传blog又发现了问题,博客页面上的图片是不会缩放的.</p>
<p>问题所在:</p>
<blockquote>
<p>修改zoom只是针对Typora的显示,但是网页端的显示是由Hexo渲染的,所以需要修改对应主题(我这里用的是Hexo next主题)的配置文件.可以参考<a href="https://siwadiya.github.io/2019/12/15/%E5%8D%9A%E5%AE%A2/next%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/">next主题个性化设置一文</a>.</p>
</blockquote>
]]></content>
      <tags>
        <tag>Typora</tag>
      </tags>
  </entry>
  <entry>
    <title>surge规则</title>
    <url>/2020/01/30/Http/surge%E8%A7%84%E5%88%99/</url>
    <content><![CDATA[<blockquote>
<p> <em>Surge提供三种域名检索方式检索域名（DOMAIN）、检索域名后缀（DOMAIN-SUFFIX）和检索域名关键字（DOMAIN-KEYWORD）。<br>三种网络连接方式直接连接（DIRECT）、使用代理（Proxy）和阻断连接（REJECT）。<br>规则运作就是if…then…的结构，如果检索域名满足什么，则选择什么网络连接方式</em> </p>
</blockquote>
<a id="more"></a>

<p>例子:</p>
<blockquote>
<p>基于域名判断屏蔽（Reject）请求：<code>DOMAIN,ad.api.3g.youku.com,REJECT</code><br>基于域名后缀判断走代理（Proxy）：<code>DOMAIN-SUFFIX,amazon.com,Proxy</code><br>基于域名关键字判断走代理（Proxy）：<code>DOMAIN-KEYWORD,google,Proxy,force-remote-dns</code><br>基于域名后缀判断走直连（DIRECT）：<code>DOMAIN-SUFFIX,126.net,DIRECT</code><br>判断是否局域网，如果是走直连（DIRECT）:<code>IP-CIRD,IP-CIDR,192.168.0.0/16,DIREC</code><br>检索IP地址，国内选择直连:<code>GEOIP,CN,DIRECT</code><br>其他的走代理:<code>FINAL Proxy</code> </p>
</blockquote>
<p>目前Clash支持的规则类型如下：</p>
<ul>
<li>DOMAIN-SUFFIX：域名后缀匹配</li>
<li>DOMAIN：域名匹配</li>
<li>DOMAIN-KEYWORD：域名关键字匹配</li>
<li>IP-CIDR：IP段匹配</li>
<li>SRC-IP-CIDR：源IP段匹配</li>
<li>GEOIP：GEOIP数据库（国家代码）匹配</li>
<li>DST-PORT：目标端口匹配</li>
<li>SRC-PORT：源端口匹配</li>
<li>MATCH：全匹配（一般放在最后）</li>
</ul>
<h3 id="史上最详尽的Surge教程（分阶层）"><a href="#史上最详尽的Surge教程（分阶层）" class="headerlink" title="史上最详尽的Surge教程（分阶层）"></a><a href="https://medium.com/@Zaihuaone/%E5%8F%B2%E4%B8%8A%E6%9C%80%E8%AF%A6%E5%B0%BD%E7%9A%84surge%E6%95%99%E7%A8%8B-%E5%88%86%E9%98%B6%E5%B1%82-1d10720779c7" target="_blank" rel="noopener">史上最详尽的Surge教程（分阶层）</a></h3><h3 id="中文文档"><a href="#中文文档" class="headerlink" title="中文文档"></a><a href="https://docs.cfw.lbyczf.com/contents/ui/profiles/rules.html" target="_blank" rel="noopener">中文文档</a></h3><h3 id="合理使用-REJECT-规则"><a href="#合理使用-REJECT-规则" class="headerlink" title="合理使用 REJECT 规则"></a>合理使用 REJECT 规则</h3><p> 规则中添加 REJECT，可以用来拦截隐私和广告请求，但是有些应用会无限制的尝试重新连接。 </p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 运营商及声名狼藉网站劫持</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">"Hijacking"</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">select</span></span><br><span class="line">  <span class="attr">proxies:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"REJECT"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"DIRECT"</span></span><br></pre></td></tr></table></figure>

<p>REJECT可以拒绝网站发送的数据</p>
<h3 id="规则列表中的最后两项"><a href="#规则列表中的最后两项" class="headerlink" title="规则列表中的最后两项"></a>规则列表中的最后两项</h3><p>规则列表中只有必要的一些域名或 IP，大多数时候 Recent Requests 记录的 Policy 部分，能看到的是规则配置文件最后两项判断：</p>
<ul>
<li>DIRECT（GEOIP CN → DIRECT），域名判断结果如果是中国走直连；</li>
<li>Proxy（FINAL → Proxy），兜底规则，前面规则判断完还没明确的基于这条规则走代理。</li>
</ul>
<p>从这里也能看出规则表的自定义中，至少要保留最后一条「FINAL,Proxy」规则体系才是完整的，而倒数第二条国别判断可以根据你所在的国家进行修改。</p>
]]></content>
      <tags>
        <tag>http</tag>
        <tag>surge</tag>
      </tags>
  </entry>
  <entry>
    <title>将本地仓库推送到Github</title>
    <url>/2020/01/22/Git/%E5%B0%86%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E6%8E%A8%E9%80%81%E5%88%B0Github/</url>
    <content><![CDATA[<a id="more"></a>

<p><a href="https://help.github.com/cn/github/administering-a-repository/setting-repository-visibility" target="_blank" rel="noopener"><span style="font-size:1.75em">参考链接</span></a></p>
<h2 id="将本地仓库推送到Github的流程"><a href="#将本地仓库推送到Github的流程" class="headerlink" title="将本地仓库推送到Github的流程"></a>将本地仓库推送到Github的流程</h2><p>1.打开Git Bash,将当前目录更改为本地仓库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 新建一个目录，将其初始化为Git代码库</span></span><br><span class="line">$ git init [project-name]</span><br></pre></td></tr></table></figure>

<p>2.在新的本地仓库中添加文件。 这会暂存它们用于第一次提交。 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git add .</span><br><span class="line"><span class="comment"># Adds the files in the local repository and stages them for commit. 要取消暂存文件，请使用 'git reset HEAD YOUR-FILE'。</span></span><br></pre></td></tr></table></figure>

<p>3.提交暂存在本地仓库中的文件。 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git commit -m <span class="string">"First commit"</span></span><br><span class="line"><span class="comment"># Commits the tracked changes and prepares them to be pushed to a remote repository. 要删除此提交并修改文件，请使用 'git reset --soft HEAD~1' 并再次提交和添加文件。</span></span><br></pre></td></tr></table></figure>

<p>4.在GitHub建立一个空的仓库,注意不要添加readme.md文件,防止后面报错!</p>
<p>5.在命令提示中，<a href="https://help.github.com/cn/articles/adding-a-remote" target="_blank" rel="noopener">添加远程仓库的 URL</a>（将在该 URL 推送本地仓库）。 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git remote add origin [remote repository URL]</span><br><span class="line"><span class="comment"># Sets the new remote</span></span><br><span class="line">$ git remote -v</span><br><span class="line"><span class="comment"># Verifies the new remote URL</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p> 对应的如果远程分支创建错误可以使用<code>git remote rm</code>或<code>git remote remove</code>命令删除远程URL</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git remote -v</span><br><span class="line"># 查看当前远程</span><br><span class="line">&gt; origin  https://github.com/OWNER/REPOSITORY.git (fetch)</span><br><span class="line">&gt; origin  https://github.com/OWNER/REPOSITORY.git (push)</span><br><span class="line">&gt; destination  https://github.com/FORKER/REPOSITORY.git (fetch)</span><br><span class="line">&gt; destination  https://github.com/FORKER/REPOSITORY.git (push)</span><br><span class="line"></span><br><span class="line">$ git remote rm destination</span><br><span class="line"># 删除远程</span><br><span class="line">$ git remote -v</span><br><span class="line"># 验证其已删除</span><br><span class="line">&gt; origin  https://github.com/OWNER/REPOSITORY.git (fetch)</span><br><span class="line">&gt; origin  https://github.com/OWNER/REPOSITORY.git (push)</span><br></pre></td></tr></table></figure>

<p> <strong>注</strong>：<code>git remote rm</code> 不会从服务器中删除远程仓库。 它只是从本地仓库中删除远程及其引用。 </p>
<div style="background-color:#ffdce0">**注**：`git remote rm` 不会从服务器中删除远程仓库。 它只是从本地仓库中删除远程及其引用。</div>
</blockquote>
<p>6.推送更改(本地仓库中)到 GitHub。 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git push origin master</span><br><span class="line"><span class="comment"># Pushes the changes in your local repository up to the remote repository you specified as the origin</span></span><br></pre></td></tr></table></figure>

<h3 id="Git常用命令-易百教程"><a href="#Git常用命令-易百教程" class="headerlink" title="Git常用命令-易百教程"></a><a href="https://www.yiibai.com/git/git_add.html" target="_blank" rel="noopener">Git常用命令-易百教程</a></h3>]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>JQuery学习</title>
    <url>/2020/01/22/Javascript/JQuery%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="导入jQuery"><a href="#导入jQuery" class="headerlink" title="导入jQuery"></a>导入jQuery</h2><ol>
<li><p>官网下载jQuery文件</p>
</li>
<li><p>通过cdn导入jQuery</p>
<ul>
<li><p><strong><a href="https://code.jquery.com/" target="_blank" rel="noopener">官方cdn</a></strong></p>
<p><strong>jQuery 1.x:</strong></p>
<p><code>&lt;script   src=&quot;https://code.jquery.com/jquery-1.12.4.js&quot;   integrity=&quot;sha256-Qw82+bXyGq6MydymqBxNPYTaUXXq7c8v3CwiYwLLNXU=&quot;   crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;</code></p>
</li>
<li><p><strong><a href="https://developers.google.com/speed/libraries#jquery" target="_blank" rel="noopener">Google cdn</a></strong></p>
<p><strong>3.x snippet:</strong></p>
<p><code>&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js&quot;&gt;&lt;/script&gt;</code></p>
<p><strong>2.x snippet:</strong></p>
<p><code>&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js&quot;&gt;&lt;/script&gt;</code></p>
<p><strong>1.x snippet:</strong></p>
<p><code>&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js&quot;&gt;&lt;/script&gt;</code></p>
</li>
<li><p><strong><a href="https://www.bootcdn.cn/jquery/" target="_blank" rel="noopener">Boot cdn</a></strong></p>
<p><strong>版本:1.12.4</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/1.12.4/jquery.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ol>
<h2 id="文档就绪事件"><a href="#文档就绪事件" class="headerlink" title="文档就绪事件"></a>文档就绪事件</h2><p>将 jQuery 函数位于一个 document ready 函数中： </p>
<p>这是为了防止文档在完全加载（就绪）之前运行 jQuery 代码。</p>
<p>如果在文档没有完全加载之前就运行函数，操作可能失败。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="comment">// 开始写 jQuery 代码...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="comment">// 开始写 jQuery 代码...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>以上两种写法等效</p>
<p>JQuery语法:</p>
<article style="color:blue;font-weight:700">$("触发对象").触发条件(function () {<br>
    <div style="text-indent:2rem">$("要操作的对象,CSS选择符写法").要操作的方法(参数);</div>
})</article>

<p>例如:</p>
<article style="color:red;font-weight:700">$("#btn").click(function () {<br>
    <div style="text-indent:2rem">$(".container").append("divclass="box">1\div>");</div>
})</article>

<p>例如:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#btn"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">".container"</span>).append(<span class="string">"&lt;div class=\"box\"&gt;1&lt;/div&gt;"</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="jQuery-捕获"><a href="#jQuery-捕获" class="headerlink" title="jQuery 捕获"></a>jQuery 捕获</h3><h4 id="jQuery-DOM-操作"><a href="#jQuery-DOM-操作" class="headerlink" title="jQuery DOM 操作"></a>jQuery DOM 操作</h4><p><strong>text()</strong>类似于原生js的<strong>innerText</strong></p>
<p><strong>html()</strong>类似于原生js的<strong>innerHTML</strong></p>
<h4 id="获取属性-attr"><a href="#获取属性-attr" class="headerlink" title="获取属性 - attr()"></a>获取属性 - attr()</h4><p>jQuery attr() 方法用于获取属性值。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  alert($(<span class="string">"#w3s"</span>).attr(<span class="string">"href"</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>JavaScript</tag>
        <tag>JQuery</tag>
      </tags>
  </entry>
  <entry>
    <title>Javascript/Http Status状态码</title>
    <url>/2020/01/20/Javascript/Http%20Status%E7%8A%B6%E6%80%81%E7%A0%81/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>AJAX学习</title>
    <url>/2020/01/20/Javascript/AJAX%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>AJAX即 “Asynchronous Javascript And XML “（异步JavaScript和XML）</p>
<p>AJAX 是一种用于创建快速动态网页的技术。</p>
<p>Ajax 的核心是 JavaScript 对象 XMLHttpRequest。</p>
<a id="more"></a>

<h2 id="AJAX工作原理"><a href="#AJAX工作原理" class="headerlink" title="AJAX工作原理"></a>AJAX工作原理</h2><p><img src="https://7n.w3cschool.cn/statics/images/course/ajax.gif" alt=""></p>
<h2 id="XHR的用法"><a href="#XHR的用法" class="headerlink" title="XHR的用法"></a>XHR的用法</h2><ul>
<li><p>创建xhr对象</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br></pre></td></tr></table></figure>
</li>
<li><p>设置请求头部信息</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//请求行</span></span><br><span class="line">xhr.open(<span class="string">"get"</span>,<span class="string">""</span>)</span><br><span class="line"><span class="comment">//请求头</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>发送请求</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">xhr.send(<span class="literal">null</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p>接收服务器响应</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> </span><br></pre></td></tr></table></figure>



</li>
</ul>
<h3 id="创建XHR对象"><a href="#创建XHR对象" class="headerlink" title="创建XHR对象"></a>创建XHR对象</h3><h4 id="AJAX-创建-XMLHttpRequest-对象"><a href="#AJAX-创建-XMLHttpRequest-对象" class="headerlink" title="AJAX - 创建 XMLHttpRequest 对象"></a>AJAX - 创建 XMLHttpRequest 对象</h4><p> XMLHttpRequest 是 AJAX 的基础。 </p>
<p> XMLHttpRequest 术语缩写为XHR，中文可以解释为可扩展超文本传输请求。 </p>
<p>它执行以下操作：</p>
<ol>
<li><p>在后台从客户端发送数据</p>
</li>
<li><p>从服务器接收数据</p>
</li>
<li><p>更新网页而不重新加载。</p>
<p>为了应对所有的现代浏览器，包括 IE5 和 IE6，请检查浏览器是否支持 XMLHttpRequest 对象。如果支持，则创建 XMLHttpRequest 对象。如果不支持，则创建 ActiveXObject </p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> xmlhttp;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest)</span><br><span class="line">  &#123;<span class="comment">// code for IE7+, Firefox, Chrome, Opera, Safari</span></span><br><span class="line">  xmlhttp=<span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  &#123;<span class="comment">// code for IE6, IE5</span></span><br><span class="line">  xmlhttp=<span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>



<h3 id="XHR-请求"><a href="#XHR-请求" class="headerlink" title="XHR 请求"></a>XHR 请求</h3><h4 id="AJAX工作步骤"><a href="#AJAX工作步骤" class="headerlink" title="AJAX工作步骤"></a>AJAX工作步骤</h4><hr>
<p>正如您在上面的示例中所看到的，XMLHttpRequest对象起着重要作用。</p>
<ol>
<li>用户从UI发送请求，JavaScript中调用XMLHttpRequest对象。</li>
<li>HTTP请求由XMLHttpRequest对象发送到服务器。</li>
<li>服务器使用JSP，PHP，Servlet，ASP.net等与数据库交互。</li>
<li>检索数据。</li>
<li>服务器将XML数据或JSON数据发送到XMLHttpRequest回调函数。</li>
<li>HTML和CSS数据显示在浏览器上。</li>
</ol>
<h5 id="发送请求至服务器"><a href="#发送请求至服务器" class="headerlink" title="发送请求至服务器"></a>发送请求至服务器</h5><hr>
<p> 如需将请求发送到服务器，我们使用 XMLHttpRequest 对象的<code>open()</code>和<code>send()</code>方法： </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"ajax_info.txt"</span>,<span class="literal">true</span>);        </span><br><span class="line">xmlhttp.send();</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">方法</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">open(<em>method</em>,<em>url</em>,<em>async</em>)</td>
<td align="left">规定请求的类型、URL 以及是否异步处理请求。<em>method</em>：请求的类型；GET 或 POST<em>url</em>：文件在服务器上的位置<em>async</em>：true（异步）或 false（同步）</td>
</tr>
<tr>
<td align="left">send(<em>string</em>)</td>
<td align="left">将请求发送到服务器。<em>string</em>：仅用于 POST 请求</td>
</tr>
</tbody></table>
<p>Async=true</p>
<hr>
<p> 当使用 async=true 时，请规定在响应处于 onreadystatechange 事件中的就绪状态时执行的函数： </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line"><span class="comment">// 发送请求...</span></span><br><span class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"ajax_info.txt"</span>,<span class="literal">true</span>);        </span><br><span class="line">xmlhttp.send();</span><br><span class="line"></span><br><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//200（成功）  服务器已成功处理了请求。通常，这表示服务器提供了请求的网页。</span></span><br><span class="line">    <span class="keyword">if</span> (xhr.readyState === <span class="number">4</span> &amp;&amp; xhr.status === <span class="number">20</span>) &#123;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">"view"</span>).innerHTML = xhr.responseText;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>这里也可以使用<code>onload</code>事件</p>
<h4 id="onload和onreadystatechange"><a href="#onload和onreadystatechange" class="headerlink" title="onload和onreadystatechange"></a>onload和onreadystatechange</h4><p>IE不支持onload,只支持onreadystatechange</p>
<h3 id="XHR响应"><a href="#XHR响应" class="headerlink" title="XHR响应"></a>XHR响应</h3><h4 id="AJAX-服务器响应"><a href="#AJAX-服务器响应" class="headerlink" title="AJAX - 服务器响应"></a>AJAX - 服务器响应</h4><hr>
<ul>
<li><p><strong>状态行</strong><br><code>xhr.status</code>状态码，即<a href="https://blog.csdn.net/unclebober/article/details/86626117" target="_blank" rel="noopener">Http StatusCode</a>,如200，304，404等；</p>
</li>
<li><p><strong>响应主体</strong><br><code>xhr.responseText</code>与<code>xhr.responseXML</code>都表示响应主体。</p>
<p>如需获得来自服务器的响应，请使用 XMLHttpRequest 对象的<code>responseText</code>或<code>responseXML</code>属性。 </p>
</li>
</ul>
<table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">responseText</td>
<td align="left">获得字符串形式的响应数据。</td>
</tr>
<tr>
<td align="left">responseXML</td>
<td align="left">获得 XML 形式的响应数据。</td>
</tr>
</tbody></table>
<h5 id="responseText-属性"><a href="#responseText-属性" class="headerlink" title="responseText 属性"></a>responseText 属性</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"myDiv"</span>).innerHTML=xmlhttp.responseText;</span><br></pre></td></tr></table></figure>

<h5 id="responseXML-属性"><a href="#responseXML-属性" class="headerlink" title="responseXML 属性"></a>responseXML 属性</h5><p> 如果来自服务器的响应是 XML，需要对 XML 进行解析 </p>
<h3 id="XHR-readyState"><a href="#XHR-readyState" class="headerlink" title="XHR readyState"></a>XHR readyState</h3><h4 id="AJAX-onreadystatechange-事件"><a href="#AJAX-onreadystatechange-事件" class="headerlink" title="AJAX - onreadystatechange 事件"></a>AJAX - onreadystatechange 事件</h4><hr>
<p>当发送一个请求后,客户端需要确定这个请求什么时候完成,因此,XMLHttpRequest对象提供了 <code>onreadystatechange</code>事件机制来捕获请求的状态，继而实现响应 。</p>
<p> XMLHttpRequest 对象的三个重要的属性： </p>
<table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>onreadystatechange</code></td>
<td align="left">存储函数（或函数名），每当<code>readyState</code>属性改变时，就会调用该函数。</td>
</tr>
<tr>
<td align="left"><code>readyState</code></td>
<td align="left">存有 XMLHttpRequest 的状态。从 0 到 4 发生变化。<br>0: 请求未初始化<br>1: 服务器连接已建立<br/>2: 请求已接收<br/>3: 请求处理中<br/>4: 请求已完成，且响应已就绪</td>
</tr>
<tr>
<td align="left"><code>status</code></td>
<td align="left">200: “OK” 404: 未找到页面</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Json的表示及序列化和反序列化</title>
    <url>/2020/01/19/Javascript/Json/</url>
    <content><![CDATA[<h3 id="Json-JavaScript对象表示法"><a href="#Json-JavaScript对象表示法" class="headerlink" title="Json(JavaScript对象表示法)"></a>Json(JavaScript对象表示法)</h3><p>json的语法可以表示三种类型的值:</p>
<ul>
<li>简单值</li>
<li>对象</li>
<li>数组</li>
</ul>
<a id="more"></a>

<p>1.简单值</p>
<h4 id="json字符串和json对象"><a href="#json字符串和json对象" class="headerlink" title="json字符串和json对象"></a>json字符串和json对象</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">//字符串对象格式</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"JSON"</span>,</span><br><span class="line">    <span class="attr">"address"</span>: <span class="string">"北京市西城区"</span>,</span><br><span class="line">    <span class="attr">"age"</span>: <span class="number">25</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">//数组对象格式</span></span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"JSON"</span>,</span><br><span class="line">        <span class="attr">"address"</span>: <span class="string">"北京市西城区"</span>,</span><br><span class="line">        <span class="attr">"age"</span>: <span class="number">25</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"JSON1"</span>,</span><br><span class="line">        <span class="attr">"address"</span>: <span class="string">"北京市东城区"</span>,</span><br><span class="line">        <span class="attr">"age"</span>: <span class="number">28</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>



<h3 id="JSON序列化和反序列化"><a href="#JSON序列化和反序列化" class="headerlink" title="JSON序列化和反序列化"></a>JSON序列化和反序列化</h3><blockquote>
<h4 id="首先要搞懂什么是序列化"><a href="#首先要搞懂什么是序列化" class="headerlink" title="首先要搞懂什么是序列化?."></a>首先要搞懂什么是序列化?.</h4></blockquote>
<p> 序列化（Serialization）是将对象的状态信息转换为可以存储或传输的形式的过程。</p>
<p><span style="color:red">以json为例,简而言之就是将JavaScript对象以json格式存储到到<code>*.json</code>文件中；同理反序列化就是将<code>.json</code>文件中的json对象转换为JavaScript对象。</span></p>
<h4 id="序列化——JSON-stringify"><a href="#序列化——JSON-stringify" class="headerlink" title="序列化——JSON.stringify()"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify" target="_blank" rel="noopener">序列化——<em>JSON.stringify()</em></a></h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> adress = &#123;</span><br><span class="line">    name: <span class="string">"JSON"</span>,</span><br><span class="line">    address: <span class="string">"北京市西城区"</span>,</span><br><span class="line">    age: <span class="number">25</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> result = <span class="built_in">JSON</span>.stringify(adress, [<span class="string">"name"</span>, <span class="string">"age"</span>]);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br><span class="line"><span class="comment">// 输出结果 &#123;"name":"JSON","age":25&#125;</span></span><br></pre></td></tr></table></figure>



<h4 id="反序列化——JSON-parse"><a href="#反序列化——JSON-parse" class="headerlink" title="反序列化——JSON.parse()"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse" target="_blank" rel="noopener">反序列化——<em>JSON.parse()</em></a></h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> adress1 = <span class="built_in">JSON</span>.parse(result);</span><br><span class="line"><span class="built_in">console</span>.log(adress1.address);</span><br><span class="line"><span class="comment">//输出结果  北京市西城区</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>js事件</title>
    <url>/2020/01/19/Javascript/js%E4%BA%8B%E4%BB%B6/</url>
    <content><![CDATA[<h3 id="Json-JavaScript对象表示法"><a href="#Json-JavaScript对象表示法" class="headerlink" title="Json(JavaScript对象表示法)"></a>Json(JavaScript对象表示法)</h3><p>json的语法可以表示三种类型的值:</p>
<ul>
<li>简单值</li>
<li>对象</li>
<li>数组</li>
</ul>
<a id="more"></a>

<p>1.简单值</p>
]]></content>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>博客/hexo主题之next折腾记</title>
    <url>/2020/01/18/%E5%8D%9A%E5%AE%A2/hexo%E4%B8%BB%E9%A2%98%E4%B9%8Bnext%E6%8A%98%E8%85%BE%E8%AE%B0/</url>
    <content><![CDATA[<p>test</p>
]]></content>
  </entry>
  <entry>
    <title>DOM</title>
    <url>/2020/01/16/Javascript/DOM/</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>类型</th>
<th>document类型</th>
<th>element类型</th>
</tr>
</thead>
<tbody><tr>
<td>nodeType</td>
<td>9</td>
<td>1</td>
</tr>
<tr>
<td>nodeName</td>
<td>#document</td>
<td>元素的标签名</td>
</tr>
<tr>
<td>nodeValue</td>
<td>null</td>
<td>null</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>正则表达式</title>
    <url>/2020/01/13/%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions" target="_blank" rel="noopener"><span style="font-size:1.5em">MDN</span></a></p>
<p> 正则表达式（regular expression）就是用一个“字符串”来描述一个特征，然后去验证另一个“字符串”是否符合这个特征。比如 表达式“ab+” 描述的特征是“一个 ‘a’ 和 任意个 ‘b’ ”，那么 ‘ab’, ‘abb’, ‘abbbbbbbbbb’ 都符合这个特征。 </p>
<table>
<thead>
<tr>
<th>字符</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>*</td>
<td>匹配前一项内容0或多次</td>
</tr>
<tr>
<td>?</td>
<td>匹配前一项内容0或1次</td>
</tr>
<tr>
<td>+</td>
<td>匹配前一项内容1或多次</td>
</tr>
<tr>
<td>[abc]</td>
<td>匹配任一字符: a 或 b 或 c</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>在js中两个方法创建正则表达式</p>
<p>1.字面量</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> re = <span class="regexp">/ab+c/</span>;</span><br></pre></td></tr></table></figure>

<p>2.构造函数</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> re = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"ab+c"</span>);</span><br></pre></td></tr></table></figure>

<h3 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h3><table>
<thead>
<tr>
<th align="center">^</th>
<th>含义匹配输入法开始</th>
</tr>
</thead>
<tbody><tr>
<td align="center">^</td>
<td>匹配输入的开始</td>
</tr>
<tr>
<td align="center">$</td>
<td>匹配输入的结束</td>
</tr>
<tr>
<td align="center">*</td>
<td>匹配前面一个表达式0次或多次.等价于{0,}</td>
</tr>
<tr>
<td align="center">+</td>
<td>匹配前面一个表达式1次或多次.等价于{1,}</td>
</tr>
<tr>
<td align="center">?</td>
<td>匹配前面一个表达式0次或1次.等价于{0,1}</td>
</tr>
<tr>
<td align="center">\d</td>
<td>匹配一个数字.等价于[0,9]</td>
</tr>
<tr>
<td align="center">\D</td>
<td>匹配非数字</td>
</tr>
<tr>
<td align="center">\w</td>
<td>匹配单字字符,大小写字母 a-z A-Z 数字0-9 _</td>
</tr>
<tr>
<td align="center">\W</td>
<td>匹配非单字字符</td>
</tr>
<tr>
<td align="center">{n}</td>
<td>匹配前一项n次,n是正整数</td>
</tr>
<tr>
<td align="center"></td>
<td></td>
</tr>
</tbody></table>
<h3 id="正则表达式标志"><a href="#正则表达式标志" class="headerlink" title="正则表达式标志"></a>正则表达式标志</h3><table>
<thead>
<tr>
<th align="center">标志</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><code>g</code></td>
<td align="left">全局搜索。</td>
</tr>
<tr>
<td align="center"><code>i</code></td>
<td align="left">不区分大小写搜索。</td>
</tr>
<tr>
<td align="center"><code>m</code></td>
<td align="left">多行搜索。</td>
</tr>
<tr>
<td align="center"><code>s</code></td>
<td align="left">允许 <code>.</code> 匹配换行符。</td>
</tr>
<tr>
<td align="center"><code>u</code></td>
<td align="left">使用unicode码的模式进行匹配。</td>
</tr>
<tr>
<td align="center"><code>y</code></td>
<td align="left">执行“粘性”搜索,匹配从目标字符串的当前位置开始，可以使用y标志。</td>
</tr>
</tbody></table>
<p><strong>语法</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> re = <span class="regexp">/pattern/</span>flags; <span class="comment">//字面量</span></span><br></pre></td></tr></table></figure>

<p>或</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> re = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"parttern"</span>,<span class="string">"flags"</span>); <span class="comment">//构造函数</span></span><br></pre></td></tr></table></figure>

<p>正则工具<a href="https://www.baidufe.com/fehelper/index/index.html" target="_blank" rel="noopener">FeHelper</a></p>
]]></content>
      <tags>
        <tag>正则</tag>
      </tags>
  </entry>
  <entry>
    <title>vscode snippet设置</title>
    <url>/2020/01/09/Vscode/vscode%20snippet%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a><a href="https://juejin.im/post/5d0496415188257fff23b077" target="_blank" rel="noopener">参考链接</a></h3><p>起因是这样的</p>
<blockquote>
<p>我在写js的时候输入for会有智能提示(js snippet插件的)</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> index = <span class="number">0</span>; index &lt; array.length; index++) &#123;</span><br><span class="line">    <span class="keyword">const</span> element = array[index];</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但我目前只是刚接触js,所以想让他的效果是这样的</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>于是上网查询了下,发现可以通过配置vscode内置的snippet来完成这一效果</p>
</blockquote>
<a id="more"></a>

<h3 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h3><p>首先打开snippet的配置文件,每个格式都会有一个,形如<code>$language.json</code>的配置,我要配置的是js的,所以打开javascript.json.</p>
<p>具体路径:<code>文件\首选项\用户snippet,选择要配置的语言</code></p>
<p>打开后会有一段注释,注释中已经给出了一个模板</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"Print to console": &#123;</span><br><span class="line">	"prefix": "log",</span><br><span class="line">	"body": [</span><br><span class="line">		"console.log('$1');",</span><br><span class="line">		<span class="string">"$2"</span></span><br><span class="line">	],</span><br><span class="line">	"description": "Log output to console"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>Print to console</code> 对应代码片段名称。</li>
<li><code>prefix</code> 对应触发代码片段的字符。</li>
<li><code>body</code> 对应代码片段内容，可以是字符串，也可以为数组，若为数组每个元素都做为单独的一行插入。<code>body</code> 的内容支持js的转义字符，如 <code>\n\r</code>  等，我个人不建议用 <code>\n</code> ，可另起一行给数组多插入一项，不然一行太多的话不容易观察代码块的格式。</li>
<li><code>description</code> 对应代码片段描述。</li>
</ul>
<p>要达到我需要的效果,改写成如下代码</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"Print to for": &#123;</span><br><span class="line">	"prefix": "for",</span><br><span class="line">	"body": [</span><br><span class="line">		"for ( $&#123;1:index&#125; = 0; $&#123;1:index&#125; &lt; $&#123;2:array&#125;.length; $&#123;1:index&#125;++) &#123;",</span><br><span class="line">		"\t$0",</span><br><span class="line">		<span class="string">"&#125;"</span></span><br><span class="line">	],</span><br><span class="line">	"description": "Print to for"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中\t是制表符,用来对齐的</p>
<p>$1是光标的位置,按下Tab光标移动到$2,而$0则是终止Tab键的光标操作.</p>
]]></content>
      <tags>
        <tag>javascript</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript函数</title>
    <url>/2020/01/08/Javascript/javascript%E5%86%85%E7%BD%AE%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="js"><a href="#js" class="headerlink" title="js"></a>js</h2><h3 id="js不换行输出"><a href="#js不换行输出" class="headerlink" title="js不换行输出"></a><a href="https://blog.csdn.net/hsj1669666567/article/details/83240102" target="_blank" rel="noopener">js不换行输出</a></h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">process.stdout.write();</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="split-方法"><a href="#split-方法" class="headerlink" title="split() 方法"></a><a href="https://www.runoob.com/jsref/jsref-split.html" target="_blank" rel="noopener">split() 方法</a></h3><blockquote>
<p>split() 方法用于把一个字符串分割成字符串数组。</p>
<p><strong>提示：</strong> 如果把空字符串 (“”) 用作 separator，那么 stringObject 中的每个字符之间都会被分割。</p>
<p><strong>注意：</strong> split() 方法不改变原始字符串。</p>
</blockquote>
<h3 id="sort-方法"><a href="#sort-方法" class="headerlink" title="sort()方法"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/sort" target="_blank" rel="noopener">sort()方法</a></h3><blockquote>
<p>如果没有指明 <code>compareFunction</code> ，那么元素会按照转换为的字符串的诸个字符的Unicode位点进行排序。字母会按照<code>abcd...</code>排序例如 “Banana” 会被排列到 “cherry” 之前。当数字按由小到大排序时，9 出现在 80 之前，但因为（没有指明 <code>compareFunction</code>），比较的数字会先被转换为字符串，所以在Unicode顺序上 “80” 要比 “9” 要靠前。 </p>
</blockquote>
<p>如果指明了 <code>compareFunction</code> ，那么数组会按照调用该函数的返回值排序。即 a 和 b 是两个将要被比较的元素：</p>
<ul>
<li><p>如果 <code>compareFunction(a, b)</code> 小于 0 ，那么 a 会被排列到 b 之前；</p>
</li>
<li><p>如果 <code>compareFunction(a, b)</code> 等于 0 ， a 和 b 的相对位置不变。备注： ECMAScript 标准并不保证这一行为，而且也不是所有浏览器都会遵守（例如 Mozilla 在 2003 年之前的版本）；</p>
</li>
<li><p>如果 <code>compareFunction(a, b)</code> 大于 0 ， b 会被排列到 a 之前。</p>
</li>
<li><p><code>compareFunction(a, b)</code> 必须总是对相同的输入返回相同的比较结果，否则排序的结果将是不确定的。</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript笔记</title>
    <url>/2020/01/06/Javascript/javascript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h3><h4 id="相等操作符"><a href="#相等操作符" class="headerlink" title="相等操作符"></a>相等操作符</h4><h5 id="1-相等和不相等"><a href="#1-相等和不相等" class="headerlink" title="1. 相等和不相等(==)"></a>1. 相等和不相等(==)</h5><a id="more"></a>

<h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><h4 id="函数签名"><a href="#函数签名" class="headerlink" title="函数签名"></a>函数签名</h4><p> <strong>函数签名</strong>（或者<em>类型</em>签名，抑或<em>方法</em>签名）定义了 <a href="https://developer.mozilla.org/en-US/docs/Glossary/Function" target="_blank" rel="noopener">函数</a>或<a href="https://developer.mozilla.org/en-US/docs/Glossary/Method" target="_blank" rel="noopener">方法</a>的输入与输出。 </p>
<p>签名可包含以下内容：</p>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Glossary/Parameter" target="_blank" rel="noopener">参数</a> 及参数的 <a href="https://developer.mozilla.org/en-US/docs/Glossary/Type" target="_blank" rel="noopener">类型</a></li>
<li>一个的返回值及其类型</li>
<li>可能会抛出或传回的<a href="https://developer.mozilla.org/en-US/docs/Glossary/Exception" target="_blank" rel="noopener">异常</a></li>
<li>该方法在 <a href="https://developer.mozilla.org/en-US/docs/Glossary/OOP" target="_blank" rel="noopener">面向对象</a>程序中的可用性方面的信息（如<code>public</code>、<code>static</code>或<code>prototype</code>）。</li>
</ul>
<h4 id="传递参数"><a href="#传递参数" class="headerlink" title="传递参数"></a>传递参数</h4><p>需要注意:没有传递值的命名参数将自动被赋予undefined值</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doAdd</span>(<span class="params">num1, num2</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">arguments</span>[<span class="number">1</span>] = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[<span class="number">0</span>], num2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">doAdd(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">输出结果:</span><br><span class="line"><span class="number">1</span> <span class="literal">undefined</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>vscode之prettier插件配置</title>
    <url>/2020/01/05/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E7%BD%AE/Prettierr%E6%8F%92%E4%BB%B6%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="针对不同语言配置"><a href="#针对不同语言配置" class="headerlink" title="针对不同语言配置"></a>针对不同语言配置</h2><p><strong>vscode使用prettier进行格式化的小伙伴一定会有这样的需求:</strong></p>
<p>对不同语言缩进不同的空格数</p>
<p>比如说html缩进4格,而css只想缩进2格</p>
<p>我在网上看个很多别人写的prettier自定义配置,但是都没弄懂.</p>
<p>最后还是反复看官方文档才终于搞懂了</p>
<a id="more"></a>

<h4 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a><i style="display:none">官方文档</i></h4><ul>
<li><h4 id="官方文档-1"><a href="#官方文档-1" class="headerlink" title="官方文档"></a><a href="https://github.com/prettier/prettier-vscode" target="_blank" rel="noopener">官方文档</a></h4></li>
</ul>
<p>之前看了官方文档,在vscode全局配置文件<code>setting.json</code>中修改使不同语言使用不同格式化插件</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"[html]": &#123;</span><br><span class="line">        "editor.defaultFormatter": "HookyQR.beautify"</span><br><span class="line">    &#125;,</span><br><span class="line">"[css]": &#123;</span><br><span class="line">        "editor.defaultFormatter": "esbenp.prettier-vscode"</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure>

<p>这样虽然解决了问题,但是很麻烦</p>
<h3 id="1-单个项目配置"><a href="#1-单个项目配置" class="headerlink" title="1. 单个项目配置"></a>1. 单个项目配置</h3><p>prettier官方给出了针对不同项目配置prettier的方法:</p>
<p>在项目根目录建立<code>.prettierrc</code>文件</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"semi"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"overrides"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"files"</span>: <span class="string">"*.test.js"</span>,</span><br><span class="line">            <span class="attr">"options"</span>: &#123;</span><br><span class="line">                <span class="attr">"semi"</span>: <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"files"</span>: [<span class="string">"*.html"</span>, <span class="string">"legacy/**/*.js"</span>],</span><br><span class="line">            <span class="attr">"options"</span>: &#123;</span><br><span class="line">                <span class="attr">"tabWidth"</span>: <span class="number">4</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"files"</span>: [<span class="string">"*.css"</span>],</span><br><span class="line">            <span class="attr">"options"</span>: &#123;</span><br><span class="line">                <span class="attr">"tabWidth"</span>: <span class="number">2</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>从上面可以看出,<code>.prettierrc</code>文件对不同格式的文件自定义了不同的<code>tabWidth</code>值,而<code>tabWidth</code>就是缩进的空格数,这样做可以方便地配置不同格式下prettier的选项,但是对我来说还不够,因为每建一个项目就要建一个这个文件(我有时候会忘记).于是我想弄成全局配置.</p>
<h3 id="2-全局配置"><a href="#2-全局配置" class="headerlink" title="2. 全局配置"></a>2. 全局配置</h3><p>官方文档在扩展设置一栏中给了一个<code>prettier.configPath</code></p>
<blockquote>
<p>prettier.configPath<br>提供更漂亮的配置文件的自定义路径。</p>
<p>注意，如果设置了该值，将始终使用该值，并且本地配置文件将被忽略。全局默认值的一个更好的选择是将~/.prettierrc文件放在主目录中。</p>
</blockquote>
<p>在setting.json中配置如下:</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">//指定全局全局配置文件</span></span><br><span class="line">"prettier.configPath": "***\\.prettierrc",</span><br></pre></td></tr></table></figure>

<p><code>.prettierrc</code>就是上面写的配置文件,只要在<code>setting.json</code>中指定配置文件,就会应用到全局</p>
<p><strong style="color:red">需要注意的是,如果设置了这个选项,那你项目目录的<code>.prettierrc</code>文件就会失效.</strong></p>
<h2 id="prettier设置详解"><a href="#prettier设置详解" class="headerlink" title="prettier设置详解"></a>prettier设置详解</h2><p>prettier给出了如下设置选项</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">prettier.arrowParens</span><br><span class="line">prettier.bracketSpacing</span><br><span class="line">prettier.endOfLine</span><br><span class="line">prettier.htmlWhitespaceSensitivity</span><br><span class="line">prettier.insertPragma</span><br><span class="line">prettier.jsxBracketSameLine</span><br><span class="line">prettier.jsxSingleQuote</span><br><span class="line">prettier.printWidth</span><br><span class="line">prettier.proseWrap</span><br><span class="line">prettier.quoteProps</span><br><span class="line">prettier.requirePragma</span><br><span class="line">prettier.semi	//行末分号</span><br><span class="line">prettier.singleQuote	//使用单引号</span><br><span class="line">prettier.tabWidth	//tab的宽度</span><br><span class="line">prettier.trailingComma</span><br><span class="line">prettier.useTabs   //使用制表符代替空格缩进</span><br><span class="line">prettier.vueIndentScriptAndStyle</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>vscode</tag>
        <tag>电脑好软</tag>
      </tags>
  </entry>
  <entry>
    <title>everything搜索</title>
    <url>/2020/01/05/%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/everything%E6%90%9C%E7%B4%A2/</url>
    <content><![CDATA[<p>everything常用技巧</p>
<p><a href="https://blog.csdn.net/x_iya/article/details/12178279" target="_blank" rel="noopener">参考链接</a></p>
<h5 id="1-指定文件目录搜索示例"><a href="#1-指定文件目录搜索示例" class="headerlink" title="1. 指定文件目录搜索示例:"></a>1. 指定文件目录搜索示例:</h5><p> <strong><em>\</em>TDDOWNLOAD\ abc\</strong>     *<em>在所有TDDOWNLOAD文件夹下搜索包含abc字符的文件及文件夹*<strong>*<br>**\</strong>TDDOWNLOAD\ \</em>.jpg**    *<em>在所有TDDOWNLOAD文件夹下搜索jpg后缀文件*<strong>*<br>**\</strong>F:\TDDOWNLOAD\ abc**   *<em>在F:\TDDOWNLOAD\目录下搜索包含abc字符的文件及文件夹***</em><br><strong>\</strong>F:\TDDOWNLOAD\ \</em>.jpg**  *<em>在F:\TDDOWNLOAD\目录下搜索jpg后缀文件***</em> </p>
]]></content>
      <tags>
        <tag>电脑好软</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo插件配置</title>
    <url>/2020/01/04/%E5%8D%9A%E5%AE%A2/hexo%E6%8F%92%E4%BB%B6%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>无意中逛到hexo 的插件<strong><a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener">hexo-helper-live2d</a></strong></p>
<p>是一个人物随着你的鼠标晃啊晃~</p>
<p>hexo站点目录</p>
<img src="https://i.loli.net/2020/01/05/cE9W6HUCDyM2axK.png" alt="1578150614652.png" style="zoom:80%;" />

]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>git</title>
    <url>/2020/01/04/Git/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p><a href="https://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html" target="_blank" rel="noopener"><span style="font-size:1.75em">参考链接</span></a></p>
<h2 id="一、新建代码库"><a href="#一、新建代码库" class="headerlink" title="一、新建代码库"></a>一、新建代码库</h2><p>使用当前目录作为Git仓库，初始化本地仓库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在当前目录新建一个Git代码库</span></span><br><span class="line">$ git init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个目录，将其初始化为Git代码库</span></span><br><span class="line">$ git init [project-name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载一个项目和它的整个代码历史</span></span><br><span class="line">$ git <span class="built_in">clone</span> [url]</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS/Bootstrap</title>
    <url>/2020/01/04/CSS/Bootstrap/</url>
    <content><![CDATA[<h1 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h1><h2 id="栅格系统"><a href="#栅格系统" class="headerlink" title="栅格系统"></a>栅格系统</h2><p>Boostrap栅格系统工作原理:</p>
<ul>
<li>“行（row）”必须包含在 <code>.container</code> （固定宽度）或 <code>.container-fluid</code> （100% 宽度）中，以便为其赋予合适的排列（aligment）和内补（padding）。 </li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>常见问题总结</title>
    <url>/2020/01/04/%E6%80%BB%E7%BB%93/%E5%89%8D%E7%AB%AF%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h3 id="什么是标签语义化-标签语义化有什么优势-你知道的常见语义化标签有哪些"><a href="#什么是标签语义化-标签语义化有什么优势-你知道的常见语义化标签有哪些" class="headerlink" title="什么是标签语义化? 标签语义化有什么优势? 你知道的常见语义化标签有哪些?"></a>什么是标签语义化? 标签语义化有什么优势? 你知道的常见语义化标签有哪些?</h3>]]></content>
      <tags>
        <tag>css</tag>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>css逻辑运算符</title>
    <url>/2020/01/02/CSS/css%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    <content><![CDATA[<p><a href="http://blog.mingsixue.com/effect/CSS-not-use-skill.html" target="_blank" rel="noopener">参考链接</a></p>
<h1 id="CSS-not-选择器使用技巧"><a href="#CSS-not-选择器使用技巧" class="headerlink" title="CSS :not()选择器使用技巧"></a>CSS :not()选择器使用技巧</h1><h2 id="1、使用-not-去除列表最后一个元素的右边框"><a href="#1、使用-not-去除列表最后一个元素的右边框" class="headerlink" title="1、使用:not()去除列表最后一个元素的右边框"></a>1、使用:not()去除列表最后一个元素的右边框</h2><p>css代码:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">li</span><span class="selector-pseudo">:not(</span><span class="selector-pseudo">:last-child)</span> &#123;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">3px</span> solid red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中需要注意的是,li必须是最后一个子代标签.</p>
<a id="more"></a>

<h3 id="子代选择器的规则"><a href="#子代选择器的规则" class="headerlink" title="子代选择器的规则"></a>子代选择器的规则</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            padding: 0;</span><br><span class="line">            margin: 0;</span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.father</span> &#123;</span></span><br><span class="line">            list-style: none;</span><br><span class="line">            width: 600px;</span><br><span class="line">            height: 400px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.son</span> &#123;</span></span><br><span class="line">            width: 50px;</span><br><span class="line">            height: 50px;</span><br><span class="line">            float: left;</span><br><span class="line">            background-color: lime;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        span &#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: blue;</span><br><span class="line"><span class="css">            <span class="comment">/* border-right: 3px solid red; */</span></span></span><br><span class="line">            float: left;</span><br><span class="line">            margin-right: 20px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 子元素中的标签,如果是span标签,则生效;如果被其他元素占用,则无效 */</span></span></span><br><span class="line">        /* span:nth-child(5) &#123;</span><br><span class="line">            background-color: yellow;</span><br><span class="line">            border-right: 5px solid red;</span><br><span class="line">        &#125; */</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 子元素中的span标签,其他元素的占用不影响span顺序 */</span></span></span><br><span class="line">        /* span:nth-of-type(4) &#123;</span><br><span class="line">            background-color: yellow;</span><br><span class="line">            border-right: 3px solid red;</span><br><span class="line">        &#125; */</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 子元素中的span标签,最后一个元素是span,则生效;反之无效 */</span></span></span><br><span class="line">        /* span:last-child &#123;</span><br><span class="line">            border-right: 3px solid red;</span><br><span class="line">        &#125; */</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 与nth-child相反,从反方向开始计数,如果被其他元素占用,则无效 */</span></span></span><br><span class="line">        /* span:nth-last-child(2) &#123;</span><br><span class="line">            border-right: 3px solid red;</span><br><span class="line">        &#125; */</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 与nth-child相反,从反方向开始计数,其他元素的占用不影响 */</span></span></span><br><span class="line">        /* span:nth-last-of-type(2) &#123;</span><br><span class="line">            border-right: 3px solid red;</span><br><span class="line">        &#125; */</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 除最后一个span元素外都生效,其他元素会影响 */</span></span></span><br><span class="line">        /* span:not(:last-child) &#123;</span><br><span class="line">            border-right: 3px solid red;</span><br><span class="line">        &#125; */</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 除最后一个span元素外都生效,其他元素不影响 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">span</span><span class="selector-pseudo">:not(</span><span class="selector-pseudo">:last-of-type)</span> &#123;</span></span><br><span class="line">            border-right: 3px solid red;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"father"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"son"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>媒体查询</title>
    <url>/2020/01/01/CSS/%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<p>响应式web设计</p>
<p>媒体查询写入样式表</p>
<h4 id="在样式表中嵌入媒体查询"><a href="#在样式表中嵌入媒体查询" class="headerlink" title="在样式表中嵌入媒体查询"></a>在样式表中嵌入媒体查询</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 在样式表中嵌入媒体查询 */</span></span><br><span class="line">@<span class="keyword">media</span> (max-width: <span class="number">480px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">body</span> &#123;</span><br><span class="line">        <span class="comment">/* 这里是样式属性 */</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.box</span> &#123;</span><br><span class="line">        <span class="comment">/* 这是样式属性 */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>rime折腾记</title>
    <url>/2019/12/31/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E7%BD%AE/rime%E6%8A%98%E8%85%BE%E8%AE%B0/</url>
    <content><![CDATA[<p>rime折腾之手机篇</p>
<p>android上的rime叫同文输入法</p>
<p><a href="https://github.com/osfans/trime/wiki/UserGuide" target="_blank" rel="noopener">用户手册</a></p>
<p> 配置输入法（键盘及各种界面功能），可参考<a href="https://github.com/osfans/trime/wiki/trime.yaml詳解" target="_blank" rel="noopener"><code>trime.yaml</code>详解</a>。 </p>
<h4 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h4><p>在<code>/rime</code>目录下创建<code>trime.custom.yaml</code>文件,这是修改默认主题的配置文件</p>
<p>如果要修改其他主题的配置文件，需另外新建配置文件。如同文风主题，新建名为<code>tongwenfeng.trime.custom.yaml</code>的配置文件。</p>
]]></content>
      <tags>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title>rime输入法配置问题</title>
    <url>/2019/12/30/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E7%BD%AE/rime%E8%BE%93%E5%85%A5%E6%B3%95%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>首先在 「用户文件夹」（%appdata%）目录下新建2个文件<code>default.custom.yaml</code>和<code>weasel.custom.yaml</code></p>
<p>其中 <code>default.custom.yaml</code>是设置一些默认设置的配置文件,而<code>weasel.custom.yaml</code>是我们自定义设置的配置文件</p>
<p><a href="https://github.com/rime/home/wiki/CustomizationGuide" target="_blank" rel="noopener">官方定制指南</a></p>
<h4 id="定制字体"><a href="#定制字体" class="headerlink" title="定制字体"></a>定制字体</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># weasel.custom.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">patch:</span></span><br><span class="line">  <span class="attr">"style/font_face":</span> <span class="string">"明兰"</span>  <span class="comment"># 字體名稱，從記事本等處的系統字體對話框裏能看到</span></span><br><span class="line">  <span class="attr">"style/font_point":</span> <span class="number">14</span>     <span class="comment"># 字號，只認數字的，不認「五號」、「小五」這樣的</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>电脑好软</tag>
      </tags>
  </entry>
  <entry>
    <title>div对齐问题</title>
    <url>/2019/12/24/CSS/div%E5%AF%B9%E9%BD%90%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>在仿京东页面的时候遇到了一个问题，dl中的内容不一样导致盒子高度不同，对齐结果不是预期的</p>
<img src="https://i.loli.net/2019/12/24/UuBJwfYyoLxXalI.png" alt="">

<p> <strong>原因</strong>：不同浏览器有不同的布局方式，有的是默认上对齐，有的是默认下对齐。 这里我的浏览器默认是下对齐。</p>
<p> <strong>解决方案</strong>： 给子div加上样式： <code>vertical-align:top;</code>即可。 </p>
<h5 id="vertical-align相关知识"><a href="#vertical-align相关知识" class="headerlink" title="vertical-align相关知识"></a><a href="https://www.w3cschool.cn/cssref/pr-pos-vertical-align.html" target="_blank" rel="noopener">vertical-align相关知识</a></h5>]]></content>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>品优购</title>
    <url>/2019/12/24/CSS/%E5%93%81%E4%BC%98%E8%B4%AD/</url>
    <content><![CDATA[<h3 id="copyright"><a href="#copyright" class="headerlink" title="copyright"></a>copyright</h3><p>仿照<a href="https://www.jd.com/" target="_blank" rel="noopener">京东</a></p>
<a id="more"></a>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 仿照京东的copyright写的 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"copyright"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"copyright_links w"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>关于我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"copyright_split"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"copyright_split"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>联系客服<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"copyright_split"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>商家入驻<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"copyright_split"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>营销中心<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"copyright_split"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>手机品优购<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"copyright_split"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"copyright_split"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>销售联盟<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"copyright_split"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>品优购社区<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"copyright_split"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>品优购公益<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"copyright_split"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>English Site<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"copyright_split"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Contact U<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dvi</span> <span class="attr">class</span>=<span class="string">"copyright_info"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                地址：北京市昌平区建材城西路金燕龙办公楼一层&amp;nbsp;邮编：100096&amp;nbsp;电话：400-618-4000&amp;nbsp;传真：010-82935100&amp;nbsp;邮箱：zhanghj+itcast.cn</span><br><span class="line">            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                (京)ICP备08001421号京公安网安备110108007702</span><br><span class="line">            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dvi</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>CSS:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* ###copyright */</span></span><br><span class="line"><span class="comment">/* links */</span></span><br><span class="line"><span class="selector-class">.copyright</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">2px</span> solid yellowgreen;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f5f5f5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.copyright_links</span> &#123;</span><br><span class="line">    <span class="comment">/* height: 20px; */</span></span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="comment">/* background-color: red; */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.copyright_links</span> &#123;</span><br><span class="line">    <span class="comment">/* background-color: pink; */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.copyright_links</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.copyright_links</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* copyright_info */</span></span><br><span class="line"><span class="selector-class">.copyright_info</span>&#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#999999</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>css</tag>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>居中的问题</title>
    <url>/2019/12/24/CSS/%E5%B1%85%E4%B8%AD/</url>
    <content><![CDATA[<p>多行文本的居中<br>不能用<code>line-height</code></p>
<p>使用<code>margin-top</code>和<code>margin-bottom</code>来解决</p>
<p>给行内块元素的父级设置font-size=0可以消除上下左右边距</p>
]]></content>
      <tags>
        <tag>css</tag>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>创建一个搜索框</title>
    <url>/2019/12/23/CSS/%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%90%9C%E7%B4%A2%E6%A1%86/</url>
    <content><![CDATA[<p>创建一个searchbox的步骤：</p>
<ul>
<li>大盒子searchbox<ul>
<li>小盒子搜索框input</li>
<li>按钮button</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>css</tag>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>关于元素的居中</title>
    <url>/2019/12/21/CSS/%E5%85%B3%E4%BA%8E%E5%85%83%E7%B4%A0%E7%9A%84%E5%B1%85%E4%B8%AD/</url>
    <content><![CDATA[<h4 id="水平居中、垂直居中、水平垂直居中、浮动居中、绝对定位居中"><a href="#水平居中、垂直居中、水平垂直居中、浮动居中、绝对定位居中" class="headerlink" title="水平居中、垂直居中、水平垂直居中、浮动居中、绝对定位居中"></a><a href="https://segmentfault.com/a/1190000015095402" target="_blank" rel="noopener">水平居中、垂直居中、水平垂直居中、浮动居中、绝对定位居中</a></h4><h3 id="1-常规元素的水平居中"><a href="#1-常规元素的水平居中" class="headerlink" title="1. 常规元素的水平居中"></a>1. 常规元素的水平居中</h3><ul>
<li>行内元素、不定宽块级元素：text-align </li>
</ul>
]]></content>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>创建一个导航栏</title>
    <url>/2019/12/19/CSS/%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%AF%BC%E8%88%AA%E6%A0%8F%E7%9A%84%E6%AD%A5%E9%AA%A4/</url>
    <content><![CDATA[<p>首先确定一个通栏的盒子，然后版心</p>
<p>使用无序列表来布置导航栏</p>
<ol>
<li>对ul设定高度和宽度(可以是100%，如果有继承高度的话)</li>
<li>对li设定：转换为块元素，左浮动以排成一排，设定左右边距，<code>list-style-type: none;</code>去除点点。这个时候列表还未居中。</li>
<li>对li中a设定：显示模式行内块元素(也可以不用)，设定高度(如果从ul继承了高度，可以不写)和行高来居中，<code>text-decoration: none;</code>去除下划线</li>
</ol>
]]></content>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML笔记</title>
    <url>/2019/12/19/Html/%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="input元素的属性"><a href="#input元素的属性" class="headerlink" title="input元素的属性"></a>input元素的属性</h3><h4 id="height属性"><a href="#height属性" class="headerlink" title="height属性"></a>height属性</h4><p> 规定 &lt;input&gt;元素的高度。(只针对type=”image”)</p>
<p> width 属性规定&lt;input&gt; 元素的宽度。 (只针对type=”image”) </p>
<h3 id="input输入框默认在输入时会出现蓝色边框"><a href="#input输入框默认在输入时会出现蓝色边框" class="headerlink" title="input输入框默认在输入时会出现蓝色边框"></a>input输入框默认在输入时会出现蓝色边框</h3><p>如何去除？</p>
<p>这是是跟css的<a href="https://www.w3cschool.cn/cssref/pr-outline.html" target="_blank" rel="noopener">outline属性</a>有关</p>
<p>其中</p>
<table>
<thead>
<tr>
<th><em>outline-color</em></th>
<th>规定边框的颜色。参阅：<a href="https://www.w3cschool.cn/cssref/pr-outline-color.html" target="_blank" rel="noopener">outline-color</a> 中可能的值。</th>
</tr>
</thead>
<tbody><tr>
<td><em>outline-style</em></td>
<td>规定边框的样式。参阅：<a href="https://www.w3cschool.cn/cssref/pr-outline-style.html" target="_blank" rel="noopener">outline-style</a> 中可能的值。</td>
</tr>
<tr>
<td><em>outline-width</em></td>
<td>规定边框的宽度。参阅：<a href="https://www.w3cschool.cn/cssref/pr-outline-width.html" target="_blank" rel="noopener">outline-width</a> 中可能的值。</td>
</tr>
<tr>
<td>inherit</td>
<td>规定应该从父元素继承 outline 属性的设置。</td>
</tr>
</tbody></table>
<p>使用<code>outline:none</code>即可去除。</p>
]]></content>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>next主题个性化设置</title>
    <url>/2019/12/15/%E5%8D%9A%E5%AE%A2/next%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<a id="more"></a>

<h2 id="Next主题个性化设置"><a href="#Next主题个性化设置" class="headerlink" title="Next主题个性化设置"></a>Next主题个性化设置</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<h3 id="Next安装后修改站点语言的问题"><a href="#Next安装后修改站点语言的问题" class="headerlink" title="Next安装后修改站点语言的问题"></a>Next安装后修改站点语言的问题</h3><blockquote>
<p>在安装后站点根目录配置文件/_config.yml中language属性是 zh-Hans，但是站点语言并不是中文？</p>
</blockquote>
<p>参考链接： <a href="https://blog.csdn.net/mqdxiaoxiao/article/details/93251246" target="_blank" rel="noopener">https://blog.csdn.net/mqdxiaoxiao/article/details/93251246</a> </p>
<h3 id="设定代码高亮主题"><a href="#设定代码高亮主题" class="headerlink" title="设定代码高亮主题"></a>设定代码高亮主题</h3><p>NexT使用Tomorrow Theme作为代码高亮，共有5款主题供你选择: normal | night | night eighties | night blue | night bright,默认使用的是白色的normal<br> 编辑站点的_config.yml：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Code Highlight theme</span></span><br><span class="line"><span class="comment"># Available value: normal | night | night eighties | night blue | night bright</span></span><br><span class="line"><span class="comment"># https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line"><span class="attr">highlight_theme:</span> <span class="string">normal</span></span><br></pre></td></tr></table></figure>



<h4 id="Next-Schemes"><a href="#Next-Schemes" class="headerlink" title="Next  Schemes"></a>Next  Schemes</h4><h2 id="Next主题颜色配置"><a href="#Next主题颜色配置" class="headerlink" title="Next主题颜色配置"></a>Next主题颜色配置</h2><h3 id="主题颜色"><a href="#主题颜色" class="headerlink" title="主题颜色"></a>主题颜色</h3><p>next主题的颜色在模板中都是用形如<code>$gray-lighter</code>,<code>$black-light</code>来定义的,其定义文件目录为:</p>
<p><code>hexo/themes/next/source/css/_variables/base.styl</code></p>
<h4 id="知识拓展-styl是什么文件"><a href="#知识拓展-styl是什么文件" class="headerlink" title="知识拓展: styl是什么文件?"></a>知识拓展: styl是什么文件?</h4><blockquote>
<p> <code>Stylus</code> 是一个CSS的预处理框架，2010年产生，来自Node.js社区，主要用来给Node项目进行CSS预处理支持，所以 <code>Stylus</code> 是一种新型语言，可以创建健壮的、动态的、富有表现力的CSS。比较年轻，其本质上做的事情与 <code>SASS</code>/<code>LESS</code> 等类似，应该是有很多借鉴，所以近似脚本的方式去写CSS代码。 </p>
<p><a href="https://juejin.im/entry/59a3dd10f265da247d728f26" target="_blank" rel="noopener">参考链接</a></p>
</blockquote>
<p>找到Colors代码段</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Colors</span></span><br><span class="line"><span class="comment">// colors for use across theme.</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line">$whitesmoke   = #f5f5f5;</span><br><span class="line">$gainsboro    = #eee;</span><br><span class="line">$gray-lighter = #ddd;</span><br><span class="line">$grey-light   = #ccc;</span><br><span class="line">$grey         = #bbb;</span><br><span class="line">$grey-dark    = #999;</span><br><span class="line">$grey-dim     = #666;</span><br><span class="line">$black-light  = #555;</span><br><span class="line">$black-dim    = #333;</span><br><span class="line">$black-deep   = #222;</span><br><span class="line">$red          = #ff2a2a;</span><br><span class="line">$blue-bright  = #87daff;</span><br><span class="line">$blue         = #0684bd;</span><br><span class="line">$blue-deep    = #262a30;</span><br><span class="line">$orange       = #fc6423;</span><br><span class="line">$black        = rgba(0,0,0,0.84);</span><br></pre></td></tr></table></figure>

<p>其中最后一个<code>$black</code>是我自己添加的</p>
<p>具体使用在样式中是这样的</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">blockquote</span> &#123;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">3px</span> solid <span class="variable">$black</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其效果等效于css中的</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">blockquote</span> &#123;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">3px</span> solid <span class="built_in">rgba</span>(0,0,0,0.84);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>css布局</title>
    <url>/2019/12/15/CSS/css%E5%B8%83%E5%B1%80/</url>
    <content><![CDATA[<h2 id="使用float定位元素"><a href="#使用float定位元素" class="headerlink" title="使用float定位元素"></a>使用float定位元素</h2><p>关于float的理解可以看<a href="https://segmentfault.com/a/1190000009739176" target="_blank" rel="noopener">这篇文章</a></p>
 <img src="https://i.loli.net/2019/12/15/K9iwX5h8R7qupaF.png" alt="" width=60%>

<p><strong>注意：</strong><b style="color:red">如果不是浮动有固定宽度的图像，必须要为浮动元素设置宽度，这样浏览器才会流出空间显示围绕它的内容。</b></p>
<p><b style="color:blue">margin的auto值对浮动的元素不起作用，没有属性可以让一个浮动元素居中</b></p>
<p>所以一般使用一个正常的块级元素居中，带着里面浮动的元素居中。</p>
<p><i><strong>浮动可以让块级元素拍成一排</strong></i></p>
<h4 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h4><p><strong>float具有破坏性，会导致父元素坍塌，所以需要清除浮动，方法有很多种。</strong></p>
<ol>
<li><p>为父元素添加<code>overflow:hidden</code></p>
</li>
<li><p>浮动父元素</p>
</li>
<li><p><code>clear:both</code></p>
</li>
<li><p>Clearfix方法</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">''</span>;</span><br><span class="line">    <span class="attribute">display</span>:table;</span><br><span class="line">    <span class="attribute">clear</span>:both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span>&#123;</span><br><span class="line">    *zoom:1; /* 兼容IE低版本 */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<h2 id="position属性定位元素"><a href="#position属性定位元素" class="headerlink" title="position属性定位元素"></a>position属性定位元素</h2><p><a href="https://segmentfault.com/a/1190000009754431" target="_blank" rel="noopener">position详解</a></p>
<h3 id="固定导航栏"><a href="#固定导航栏" class="headerlink" title="固定导航栏"></a>固定导航栏</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.banner</span>&#123;</span><br><span class="line">	<span class="attribute">position</span>: fixed;</span><br><span class="line">	<span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>固定定位的的元素从HTML流中移除了，而页面中的其他元素并不知道这些元素的存在。这些元素会出现在固定元素的后面。使用外边距把这些内容从那些区域后面移出来。</p>
<p>鼠标观滚动对固定定位元素没有用</p>
<h2 id="Transform属性"><a href="#Transform属性" class="headerlink" title="Transform属性"></a>Transform属性</h2><blockquote>
<p>css3中transform属性定义元素空间位置的变换。</p>
</blockquote>
<h3 id="translate"><a href="#translate" class="headerlink" title="translate"></a>translate</h3><ul>
<li>设置元素在 X轴或者 Y轴上的平移变换</li>
</ul>
<h2 id="z-index"><a href="#z-index" class="headerlink" title="z-index"></a>z-index</h2><p>默认情况下的层级性：标准流    &lt;    浮动流    &lt;    定位流</p>
<p>z-index：控制的是定位元素之间的层级性</p>
<p>如果父元素已经比较过层级了(都有z-index值且不为auto)，那么子元素不会再比较层级</p>
]]></content>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo标签页显示空白的问题</title>
    <url>/2019/12/13/%E5%8D%9A%E5%AE%A2/hexo%E5%AF%BC%E8%88%AA%E6%A0%8F%E7%9A%84%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<h3 id="hexo标签页显示空白的问题"><a href="#hexo标签页显示空白的问题" class="headerlink" title="hexo标签页显示空白的问题"></a>hexo标签页显示空白的问题</h3><p>hexo导航栏设置教程可以看<a href="https://rilzob.com/2018/10/25/Hexo%E4%BD%BF%E7%94%A8%E6%94%BB%E7%95%A5%EF%BC%9A%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%8F%8A%E6%A0%87%E7%AD%BE%E7%9A%84%E5%89%AF%E6%9C%AC/" target="_blank" rel="noopener">这篇文章</a>以及<a href="https://www.jianshu.com/p/b75146d016e6" target="_blank" rel="noopener">hexo主题优化</a></p>
<p>按照网上的教程设置tags后点开标签页却是空白</p>
]]></content>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Vscode/vscode插件配置问题</title>
    <url>/2019/12/13/Vscode/vscode%E6%8F%92%E4%BB%B6%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="vscode的插件配置"><a href="#vscode的插件配置" class="headerlink" title="vscode的插件配置"></a>vscode的插件配置</h2><p>默认配置在插件安装目录下的<strong>package.json</strong>文件</p>
<p>如果是全局配置需要在<code>/.code/User</code>目录下修改<strong>setting.json</strong>文件</p>
<p>修改完配置文件需要重启vscode</p>
<p>命令 reload window</p>
]]></content>
  </entry>
  <entry>
    <title>常用技巧/everything无法使用修饰符搜索</title>
    <url>/2019/12/11/%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/everything%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E4%BF%AE%E9%A5%B0%E7%AC%A6%E6%90%9C%E7%B4%A2/</url>
    <content><![CDATA[<h2 id="记一次解决困扰我的问题"><a href="#记一次解决困扰我的问题" class="headerlink" title="记一次解决困扰我的问题"></a>记一次解决困扰我的问题</h2><blockquote>
<p>everything的修饰符等搜索语法的使用需要关闭正则表达式的功能才能使用</p>
</blockquote>
<p>闲来无事看了下everything的搜索语法，发现修饰符功能，可以仅搜索文件或文件夹等，这个功能一起从来没用过，于是立即就试了试，但是结果框一片空白，反复试了几次都没反应。不知道是什么问题，于是就到网上去搜啊，论坛，QQ群啊去问，没得到答案。</p>
<p>机缘巧合之下，我取消了搜索选项-启用正则表达式这一功能，突然就能用了 ，原来everthing的搜索语法是和正则不能同时使用的。</p>
]]></content>
  </entry>
  <entry>
    <title>常用技巧/善用搜索引擎</title>
    <url>/2019/12/11/%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/%E5%96%84%E7%94%A8%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/</url>
    <content><![CDATA[<h2 id="善用搜索引擎"><a href="#善用搜索引擎" class="headerlink" title="善用搜索引擎"></a>善用搜索引擎</h2><p>我觉得用好搜索引擎能够事半功倍</p>
<p>这篇文章说得已经很清楚了</p>
<p> <a href="https://blog.csdn.net/iteye_20659/article/details/82511882" target="_blank" rel="noopener">https://blog.csdn.net/iteye_20659/article/details/82511882</a> </p>
<ol>
<li><p>双引号</p>
<p> 把搜索词放在双引号中，代表完全匹配搜索，也就是说搜索结果返回的页面包含双引号中出现的所有的词，连顺序也必须完全匹配。 </p>
</li>
<li><p>减号“-”</p>
<p> 减号代表搜索不包含减号后面的词的页面。 </p>
<p>注意：-好前面必须是空格，后面没有空格</p>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>css笔记</title>
    <url>/2019/12/11/CSS/%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="推荐的css书写顺序"><a href="#推荐的css书写顺序" class="headerlink" title="推荐的css书写顺序"></a>推荐的css书写顺序</h2><ol>
<li>位置属性(position, top, right, z-index, display, float等)</li>
<li>大小(width, height, padding, margin)</li>
<li>文字系列(font, line-height, letter-spacing, color- text-align等)</li>
<li>背景(background, border等)</li>
<li>其他(animation, transition等)</li>
</ol>
<hr>
<ol>
<li>影响文档流的属性（比如：display, position, float, clear, visibility, table-layout等）</li>
<li>自身盒模型的属性（比如：width, height, margin, padding, border等）<ol start="3">
<li>排版相关属性（比如：font, line-height, text-align, text-indent, vertical-align等等）<ol start="4">
<li>装饰性属性（比如：color, background, opacity, cursor等）<ol start="5">
<li>生成内容的属性（比如：content, list-style, quotes等） </li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
</ol>
<hr>
<a id="more"></a>



<h3 id="font属性"><a href="#font属性" class="headerlink" title="font属性"></a>font属性</h3><p>font 简写属性在一个声明中设置所有字体属性。</p>
<p>可设置的属性是（按顺序）：</p>
<ul>
<li>font-style            字体风格</li>
<li>font-variant ——字体异体</li>
<li>font-weight——字体粗细</li>
<li>font-size/line-height——字体大小</li>
<li>font-family</li>
</ul>
<p>font-size和font-family的值是必需的。如果缺少了其他值，默认值将被插入，如果有默认值的话。</p>
<h3 id="背景-简写属性"><a href="#背景-简写属性" class="headerlink" title="背景- 简写属性"></a>背景- 简写属性</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;<span class="attribute">background</span>:<span class="number">#ffffff</span> <span class="built_in">url</span>(<span class="string">'img_tree.png'</span>) no-repeat right top;&#125;</span><br></pre></td></tr></table></figure>

<p>当使用简写属性时，属性值的顺序为：:</p>
<ul>
<li>background-color——背景颜色</li>
<li>background-image ——背景图片</li>
<li>background-repeat——背景图像平铺</li>
<li>background-attachment—— 背景图像是否固定或者随着页面的其余部分滚动。 </li>
<li>background-position——背景图像位置</li>
</ul>
<h2 id="CSS-text-align图片文字内容居左-居右-居中"><a href="#CSS-text-align图片文字内容居左-居右-居中" class="headerlink" title="CSS text-align图片文字内容居左 居右 居中"></a><a href="http://www.divcss5.com/rumen/r350.shtml" target="_blank" rel="noopener">CSS text-align图片文字内容居左 居右 居中</a></h2><h3 id="CSS链接"><a href="#CSS链接" class="headerlink" title="CSS链接"></a>CSS链接</h3><p>链接的状态：</p>
<ul>
<li><p>a:link - 正常，<strong>未访问</strong>过的链接</p>
</li>
<li><p>a:visited - 用户<strong>已访问</strong>过的链接</p>
</li>
<li><p>a:hover - 当用户<strong>鼠标悬浮</strong>在链接上时</p>
</li>
<li><p>a:active - 链接<strong>被点击</strong>的那一刻</p>
<p>text-decoration 属性主要用于删除链接中的下划线 </p>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;<span class="attribute">color</span>:<span class="number">#FF0000</span>;&#125;      <span class="comment">/* 未访问链接*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;<span class="attribute">color</span>:<span class="number">#00FF00</span>;&#125;  <span class="comment">/* visited link */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;<span class="attribute">color</span>:<span class="number">#FF00FF</span>;&#125;  <span class="comment">/* mouse over link */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;<span class="attribute">color</span>:<span class="number">#0000FF</span>;&#125;  <span class="comment">/* selected link */</span></span><br></pre></td></tr></table></figure>

<h3 id="background属性"><a href="#background属性" class="headerlink" title="background属性"></a>background属性</h3><p>当使用简写属性时，属性值的顺序为：</p>
<ul>
<li>background-color    颜色</li>
<li>background-image   地址</li>
<li>background-repeat   平铺</li>
<li>background-attachment    滚动</li>
<li>background-position    起始位置</li>
</ul>
<h1 id="CSS定位"><a href="#CSS定位" class="headerlink" title="CSS定位"></a>CSS定位</h1><h3 id="display属性"><a href="#display属性" class="headerlink" title="display属性"></a>display属性</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">display</span><span class="selector-pseudo">:inline</span>;<span class="comment">/* 块元素表现得更像行内元素 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">display</span><span class="selector-pseudo">:block</span><span class="comment">/* 行内元素表现得更像块元素 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">inline-block</span>; <span class="comment">/* 既有行内元素的特征，又有块元素的特征，例如button标签 */</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">#cccccc</span> <span class="number">1px</span> solid;</span><br><span class="line">    <span class="comment">/* 显示模式为行内块元素，即在一行之内可以分成一块一块显示 */</span></span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="comment">/* 盒子高度为40px (行内元素本身是没有宽、高属性的，通过display将显示模式转换为块元素后可以设置宽高) */</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="comment">/* 行高40px */</span></span><br><span class="line">    <span class="comment">/* 行高和盒子高度设置一致，可以使盒内元素垂直居中显示 */</span></span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="comment">/* margin和padding中四个值的先后顺序为：上右下左 */</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="comment">/* 左外边距 */</span></span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">8px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="CSS-float-属性"><a href="#CSS-float-属性" class="headerlink" title="CSS float 属性"></a>CSS float 属性</h3><p> float 属性定义元素在哪个方向浮动。以往这个属性总应用于图像，使文本围绕在图像周围，不过在 CSS 中，任何元素都可以浮动。浮动元素会生成一个块级框，而不论它本身是何种元素。 </p>
<h3 id="position属性"><a href="#position属性" class="headerlink" title="position属性"></a>position属性</h3><h2 id="导航栏"><a href="#导航栏" class="headerlink" title="导航栏"></a>导航栏</h2><h3 id="水平导航栏"><a href="#水平导航栏" class="headerlink" title="水平导航栏"></a>水平导航栏</h3><p>两种方法实现水平导航栏</p>
<ol>
<li><p>内嵌列表项</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:inline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="2">
<li><p>浮动列表项</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>:left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:block;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">60px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<h3 id="pdding的先后顺序为："><a href="#pdding的先后顺序为：" class="headerlink" title="pdding的先后顺序为："></a>pdding的先后顺序为：</h3><p><span style="color:red;font-size:1.5em">上右下左</span></p>
<h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="样式的继承"><a href="#样式的继承" class="headerlink" title="样式的继承"></a>样式的继承</h3><p>标签样式继承自最近的父辈</p>
<h3 id="CSS3-border-radius-属性"><a href="#CSS3-border-radius-属性" class="headerlink" title="CSS3 border-radius 属性"></a>CSS3 border-radius 属性</h3><p> 向 div 元素添加圆角边框</p>
<h3 id="表示方位（background-position-属性）"><a href="#表示方位（background-position-属性）" class="headerlink" title="表示方位（background-position 属性）"></a>表示方位（background-position 属性）</h3><p><a href="https://www.w3cschool.cn/cssref/pr-background-position.html" target="_blank" rel="noopener">参考手册</a></p>
<ol>
<li><p>方位名词</p>
<p>上下左右中</p>
</li>
<li><p>坐标系</p>
<p>x,y值</p>
</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 背景简写  */</span></span><br><span class="line"><span class="comment">/* background：背景颜色 背景图片地址 背景平铺 背景滚动 背景位置 */</span></span><br><span class="line"><span class="selector-class">.background</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: pink <span class="built_in">url</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 注意：简写是有默认值的，如果之前有单一属性写法，简写的默认值会覆盖掉之前的值 */</span></span><br></pre></td></tr></table></figure>



<h2 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h2><p>内盒模型：</p>
<p>外盒模型：</p>
<ul>
<li>margin：外边距，用来移动盒子</li>
</ul>
<p><b style="color:red">行内元素不要添加上下边距</b></p>
<h3 id="让块级元素水平居中？"><a href="#让块级元素水平居中？" class="headerlink" title="让块级元素水平居中？"></a>让块级元素水平居中？</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">margin</span>: 0 <span class="selector-tag">auto</span>; <span class="comment">/* 上下边距为0，左右边距自动分配 */</span></span><br></pre></td></tr></table></figure>



<h3 id="transition"><a href="#transition" class="headerlink" title="transition"></a>transition</h3><p>给当前元素设置</p>
]]></content>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS/使用em来设置字体大小</title>
    <url>/2019/12/11/CSS/%E4%BD%BF%E7%94%A8em%E6%9D%A5%E8%AE%BE%E7%BD%AE%E5%AD%97%E4%BD%93%E5%A4%A7%E5%B0%8F/</url>
    <content><![CDATA[<h3 id="使用em来设置字体大小"><a href="#使用em来设置字体大小" class="headerlink" title="使用em来设置字体大小"></a>使用em来设置字体大小</h3><p> W3C 引荐使用 em 尺寸单元。 </p>
<p> 1em 就是今朝的字体尺寸。如果一个元素的 font-size 为 16 像素，那么对付该元素，1em 就就是 16 像素。在设置字体大小时，em 的值会相对于付父元素的字体大小窜改。 </p>
<p> 阅读器中默许的文本大小是 16 像素。因而 1em 的默许尺寸是 16 像素。 </p>
<p>可能应用下面这个公式将像素转换为 em：pixels/16=em</p>
<p>（注：16 就是父元素的默认字体大小，假如父元素的 font-size 为 20px，那么公式需改为：pixels/20=em）</p>
]]></content>
  </entry>
  <entry>
    <title>Html/表单和表格的嵌套</title>
    <url>/2019/12/10/Html/%E8%A1%A8%E5%8D%95%E5%92%8C%E8%A1%A8%E6%A0%BC%E7%9A%84%E5%B5%8C%E5%A5%97/</url>
    <content><![CDATA[<h3 id="表单和表格的嵌套"><a href="#表单和表格的嵌套" class="headerlink" title="表单和表格的嵌套"></a>表单和表格的嵌套</h3><p>比较难懂的地方：</p>
<ol>
<li>表单与表格的嵌套必须将表单写在外面，因为表格有嵌套规则，table与tr之间不可以用其他标签。 </li>
<li>不要写错colspan和rowspan，合并之后多余的单元格要删除！！ </li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Html/表单</title>
    <url>/2019/12/10/Html/%E8%A1%A8%E5%8D%95/</url>
    <content><![CDATA[<h3 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">//复选框</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//多行文本框</span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">cols</span>=<span class="string">"30"</span> <span class="attr">rows</span>=<span class="string">"10"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Html/html中的跳转</title>
    <url>/2019/12/10/Html/html%E4%B8%AD%E7%9A%84%E8%B7%B3%E8%BD%AC/</url>
    <content><![CDATA[<h3 id="锚点跳转"><a href="#锚点跳转" class="headerlink" title="锚点跳转"></a>锚点跳转</h3><h5 id="一-页面内跳转"><a href="#一-页面内跳转" class="headerlink" title="一. 页面内跳转"></a>一. 页面内跳转</h5><p>方法一：</p>
<ol>
<li>设置一个锚点链接<code>&lt;a href=&quot;#miao&quot;&gt;去找喵星人&lt;/a&gt;</code>；（注意：href属性的属性值最前面要加#） </li>
<li>设置锚点的位置  <code>&lt;h3 id=&quot;miao&quot;&gt;喵星人基地&lt;/h3&gt;</code>；在要跳转到的位置的标签中添加一个id属性，属性值与①中href的属性值一样，不加# </li>
</ol>
<h5 id="二-跨页面跳转"><a href="#二-跨页面跳转" class="headerlink" title="二. 跨页面跳转"></a>二. 跨页面跳转</h5>]]></content>
  </entry>
  <entry>
    <title>Html/表格</title>
    <url>/2019/12/09/Html/%E8%A1%A8%E6%A0%BC/</url>
    <content><![CDATA[<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">caption</span>&gt;</span>标签——表格标题，以居中的形式表现出来</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">thead</span>&gt;</span>标签——表格头</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span>	table row	表格行</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    表格组成；</span></span><br><span class="line"><span class="comment">    table：完整的表格</span></span><br><span class="line"><span class="comment">    tr：表格行</span></span><br><span class="line"><span class="comment">    td：单元格</span></span><br><span class="line"><span class="comment">    table包含tr，tr包含td</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    ##合并单元格</span></span><br><span class="line"><span class="comment">    rowspan：跨行合并</span></span><br><span class="line"><span class="comment">    colspan：跨列合并</span></span><br><span class="line"><span class="comment">    1.将rowspan或columnspan添加给对应的单元格（添加的位置遵守左上原则）</span></span><br><span class="line"><span class="comment">    2.合并的值为合并的单元格个数</span></span><br><span class="line"><span class="comment">    3.删除多余的单元格</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Html/列表</title>
    <url>/2019/12/09/Html/%E5%88%97%E8%A1%A8/</url>
    <content><![CDATA[<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>有序列表、无序列表、自定义列表</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">ol	有序列表</span><br><span class="line">ul	无序列表</span><br><span class="line">dl	定义列表</span><br><span class="line"></span><br><span class="line">li	列表项</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>Html/常用特殊字符</title>
    <url>/2019/12/09/Html/%E5%B8%B8%E7%94%A8%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6/</url>
    <content><![CDATA[<h3 id="常用特殊字符"><a href="#常用特殊字符" class="headerlink" title="常用特殊字符"></a>常用特殊字符</h3><table>
<thead>
<tr>
<th>符号</th>
<th>说明</th>
<th>编码</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td>空格</td>
<td>&amp;nbsp;</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Html/字体格式化标签</title>
    <url>/2019/12/09/Html/%E5%AD%97%E4%BD%93%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h3 id="字体格式化标签"><a href="#字体格式化标签" class="headerlink" title="字体格式化标签"></a>字体格式化标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>强调<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">small</span>&gt;</span>小号字体<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sub</span>&gt;</span>下标字体<span class="tag">&lt;/<span class="name">sub</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sup</span>&gt;</span>上标字体<span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>斜体<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>斜体<span class="tag">&lt;/<span class="name">i</span>&gt;</span>  <span class="comment">&lt;!-- 不推荐用 --&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span>下划线<span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span>删除线<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="图片标签"><a href="#图片标签" class="headerlink" title="图片标签"></a>图片标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"图片路径"</span> <span class="attr">alt</span>=<span class="string">"图片加载失败的替换文本"</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>博客/hexo安装记录</title>
    <url>/2019/11/26/%E5%8D%9A%E5%AE%A2/hexo%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h1 id="hexo安装记录"><a href="#hexo安装记录" class="headerlink" title="hexo安装记录"></a>hexo安装记录</h1><p>如果<code>hexo init</code>安装过慢，请使用淘宝源。</p>
<p>更换镜像的教程如下： <a href="https://www.jianshu.com/p/26640fbad18e" target="_blank" rel="noopener">https://www.jianshu.com/p/26640fbad18e</a></p>
<ol>
<li>通过<code>config</code>命令</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br><span class="line">npm info underscore <span class="comment">#如果上面配置正确这个命令会有字符串response</span></span><br></pre></td></tr></table></figure>

<ol>
<li>命令行指定</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm --registry https://registry.npm.taobao.org info underscore</span><br></pre></td></tr></table></figure>

<ol>
<li>编辑 <code>~/.npmrc</code> 加入下面内容</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">registry = https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>



<a id="more"></a>

<h3 id="将文件夹推送到github"><a href="#将文件夹推送到github" class="headerlink" title="将文件夹推送到github"></a>将文件夹推送到github</h3><p>使用<code>git init</code>命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//老版本</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next   </span><br><span class="line">//新版本</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git config --global http.https://github.com.proxy https://127.0.0.1:1080</span><br><span class="line">git config --global https.https://github.com.proxy https://127.0.0.1:1080</span><br></pre></td></tr></table></figure>



<h2 id="Next主题配置"><a href="#Next主题配置" class="headerlink" title="Next主题配置"></a>Next主题配置</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<h3 id="Next安装后修改站点语言的问题"><a href="#Next安装后修改站点语言的问题" class="headerlink" title="Next安装后修改站点语言的问题"></a>Next安装后修改站点语言的问题</h3><blockquote>
<p>在安装后站点根目录配置文件/_config.yml中language属性是 zh-Hans，但是站点语言并不是中文？</p>
</blockquote>
<p>参考链接： <a href="https://blog.csdn.net/mqdxiaoxiao/article/details/93251246" target="_blank" rel="noopener">https://blog.csdn.net/mqdxiaoxiao/article/details/93251246</a> </p>
<h3 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ hexo n <span class="string">"博客名称"</span>  =&gt; hexo new <span class="string">"博客名称"</span>   <span class="comment">#这两个都是创建新文章，前者是简写模式</span></span><br><span class="line">$ hexo p  =&gt; hexo publish</span><br><span class="line">$ hexo g  =&gt; hexo generate  <span class="comment">#生成</span></span><br><span class="line">$ hexo s  =&gt; hexo server  <span class="comment">#启动服务预览</span></span><br><span class="line">$ hexo d  =&gt; hexo deploy  <span class="comment">#部署</span></span><br></pre></td></tr></table></figure>



<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ hexo g &amp;&amp; hexo s  <span class="comment">#通过此命令生成本地网页预览，然后可在localhost:4000查看页面效果</span></span><br></pre></td></tr></table></figure>



<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ hexo server   <span class="comment">#Hexo 会监视文件变动并自动更新，无须重启服务器。</span></span><br><span class="line">$ hexo server -s   <span class="comment">#静态模式</span></span><br><span class="line">$ hexo server -p 5000   <span class="comment">#更改端口</span></span><br><span class="line">$ hexo server -i 192.168.1.1   <span class="comment">#自定义IP</span></span><br><span class="line">$ hexo clean   <span class="comment">#清除缓存，网页正常情况下可以忽略此条命令</span></span><br><span class="line">$ hexo g   <span class="comment">#生成静态网页</span></span><br><span class="line">$ hexo d   <span class="comment">#开始部署</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/11/10/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
